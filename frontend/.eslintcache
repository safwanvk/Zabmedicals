[{"/home/safwan/Documents/projects/python/Msms/msms/frontend/src/index.js":"1","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/login.js":"2","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/utils/AuthHandler.js":"3","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/utils/Config.js":"4","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/components/SideBar.js":"5","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/components/NavBar.js":"6","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/components/Overlay.js":"7","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/utils/PrivateRoute.js":"8","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/HomeComponent.js":"9","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/components/MainComponent.js":"10","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/CompanyComponent.js":"11","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/utils/PrivateRouteNew.js":"12","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/LogoutComponent.js":"13","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/utils/ApiHandler.js":"14","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/CompanyDetailsComponent.js":"15","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/CompanyAddBankComponent.js":"16","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/CompanyEditBankComponent.js":"17","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/MedicineAddComponent.js":"18","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/MedicineManageComponent.js":"19","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/CompanyAccountComponent.js":"20","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/EmployeeComponent.js":"21","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/EmployeeDetailsComponent.js":"22","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/BillGenarateComponent.js":"23","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/components/AutoCompleteMedicine.js":"24","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/CustomerRequestComponent.js":"25"},{"size":2940,"mtime":1610012739607,"results":"26","hashOfConfig":"27"},{"size":5295,"mtime":1607083845817,"results":"28","hashOfConfig":"27"},{"size":1579,"mtime":1607584158553,"results":"29","hashOfConfig":"27"},{"size":1993,"mtime":1610013125155,"results":"30","hashOfConfig":"27"},{"size":5686,"mtime":1608263778645,"results":"31","hashOfConfig":"27"},{"size":489,"mtime":1607080759361,"results":"32","hashOfConfig":"27"},{"size":215,"mtime":1607079271537,"results":"33","hashOfConfig":"27"},{"size":418,"mtime":1607083913330,"results":"34","hashOfConfig":"27"},{"size":10612,"mtime":1610014558234,"results":"35","hashOfConfig":"27"},{"size":2654,"mtime":1607596681263,"results":"36","hashOfConfig":"27"},{"size":9300,"mtime":1607678940584,"results":"37","hashOfConfig":"27"},{"size":508,"mtime":1607174585021,"results":"38","hashOfConfig":"27"},{"size":281,"mtime":1607582342189,"results":"39","hashOfConfig":"27"},{"size":11617,"mtime":1610013973684,"results":"40","hashOfConfig":"27"},{"size":11292,"mtime":1607683149756,"results":"41","hashOfConfig":"27"},{"size":4215,"mtime":1607680003133,"results":"42","hashOfConfig":"27"},{"size":4977,"mtime":1607686051862,"results":"43","hashOfConfig":"27"},{"size":15222,"mtime":1608007247863,"results":"44","hashOfConfig":"27"},{"size":22204,"mtime":1608033010673,"results":"45","hashOfConfig":"27"},{"size":9941,"mtime":1608128061374,"results":"46","hashOfConfig":"27"},{"size":8579,"mtime":1608199376887,"results":"47","hashOfConfig":"27"},{"size":18590,"mtime":1608201347368,"results":"48","hashOfConfig":"27"},{"size":15761,"mtime":1610011692187,"results":"49","hashOfConfig":"27"},{"size":2175,"mtime":1609341754302,"results":"50","hashOfConfig":"27"},{"size":9302,"mtime":1610013933064,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"hww85w",{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"55"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"55"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"55"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"55"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"55"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"55"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"55"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"55"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"55"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"55"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"55"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"55"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"55"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"55"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"55"},"/home/safwan/Documents/projects/python/Msms/msms/frontend/src/index.js",["123","124","125"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Login from './pages/login';\nimport HomeComponent from './pages/HomeComponent'\nimport { PrivateRoute } from \"./utils/PrivateRoute\";\nimport { PrivateRouteNew } from \"./utils/PrivateRouteNew\";\nimport CompanyComponent from './pages/CompanyComponent';\nimport LogoutComponent from './pages/LogoutComponent';\nimport CompanyDetailsComponent from './pages/CompanyDetailsComponent';\nimport CompanyAddBankComponent from './pages/CompanyAddBankComponent';\nimport CompanyEditBankComponent from './pages/CompanyEditBankComponent';\nimport MedicineAddComponent from './pages/MedicineAddComponent';\nimport MedicineManageComponent from './pages/MedicineManageComponent';\nimport CompanyAccountComponent from './pages/CompanyAccountComponent';\nimport EmployeeComponent from './pages/EmployeeComponent';\nimport EmployeeDetailsComponent from './pages/EmployeeDetailsComponent';\nimport BillGenerateComponent from './pages/BillGenarateComponent';\nimport CustomerRequestComponent from './pages/CustomerRequestComponent';\nimport Config from './utils/Config';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\n\nReactDOM.render(\n    <Router>\n        <switch>\n            <Route exact path=\"/\" component={Login}></Route>\n            <Route exact path={Config.logoutPageUrl} component={LogoutComponent}></Route>\n            <PrivateRouteNew exact path=\"/home\"  activepage=\"0\" page={HomeComponent}></PrivateRouteNew>\n            <PrivateRouteNew exact path=\"/company\"   activepage=\"1\" page={CompanyComponent}></PrivateRouteNew>\n            <PrivateRouteNew exact path=\"/companydetails/:id\" activepage=\"1\" page={CompanyDetailsComponent}></PrivateRouteNew>\n            <PrivateRouteNew exact path=\"/addCompanyBank/:id\" activepage=\"1\" page={CompanyAddBankComponent}></PrivateRouteNew>\n            <PrivateRouteNew exact path=\"/editcompanybank/:company_id/:id\" activepage=\"1\" page={CompanyEditBankComponent}></PrivateRouteNew>\n            <PrivateRouteNew exact path=\"/addMedicine\" activepage=\"2\" page={MedicineAddComponent}></PrivateRouteNew>\n            <PrivateRouteNew exact path=\"/manageMedicine\" activepage=\"3\" page={MedicineManageComponent}></PrivateRouteNew>\n            <PrivateRouteNew exact path=\"/manageCompanyAccount\" activepage=\"4\" page={CompanyAccountComponent}></PrivateRouteNew>\n            <PrivateRouteNew exact path=\"/employeeManage\" activepage=\"5\" page={EmployeeComponent}></PrivateRouteNew>\n            <PrivateRouteNew exact path=\"/employeedetails/:id\" activepage=\"5\" page={EmployeeDetailsComponent}></PrivateRouteNew>\n            <PrivateRouteNew exact path=\"/generateBill\" activepage=\"6\" page={BillGenerateComponent}></PrivateRouteNew>\n            <PrivateRouteNew exact path=\"/customerRequest\" activepage=\"7\" page={CustomerRequestComponent}></PrivateRouteNew>\n        </switch>\n    </Router>\n    ,document.getElementById('root')) ",["126","127"],"/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/login.js",["128","129","130","131"],"import React from 'react'\nimport GoogleFontLoader from \"react-google-font-loader\";\nimport \"adminbsb-materialdesign/plugins/bootstrap/css/bootstrap.css\";\nimport \"adminbsb-materialdesign/plugins/node-waves/waves.css\";\nimport \"adminbsb-materialdesign/plugins/animate-css/animate.css\";\nimport \"adminbsb-materialdesign/css/style.css\";\nimport AuthHandler from \"../utils/AuthHandler\";\nimport Config from '../utils/Config';\nimport { Redirect } from \"react-router-dom\";\n\nclass Login extends React.Component{\n\n    \n\n    state = {\n        username: \"\",\n        password: \"\",\n        btnDisabled: true,\n        loginStatus: 0,\n\n      };\n      saveInputs = (event) => {\n        var key = event.target.name;\n        this.setState({ [key]: event.target.value });\n        if (this.state.username != \"\" && this.state.password != \"\") {\n          this.setState({ btnDisabled: false });\n        } else {\n          this.setState({ btnDisabled: true });\n        }\n      };\n    \n      formSubmit = (event) => {\n        event.preventDefault();\n        console.log(this.state);\n        this.setState({ loginStatus: 1 });\n        AuthHandler.login(\n            this.state.username,\n            this.state.password,\n            this.handleAjaxResponse\n        );\n        \n      };\n\n      handleAjaxResponse = (data) => {\n        console.log(data);\n        if (data.error) {\n          this.setState({ loginStatus: 4 });\n        } else {\n          this.setState({ loginStatus: 3 });\n          window.location = Config.homeUrl;\n        }\n      };\n\n      getMessages = () => {\n        if (this.state.loginStatus === 0) {\n          return \"\";\n        } \n        else if (this.state.loginStatus === 1) {\n          return (\n            <div class=\"alert alert-warning\">\n              <strong>Logging in!</strong> Please Wait...\n            </div>\n          );\n        } \n        else if (this.state.loginStatus === 3) {\n          return (\n            <div class=\"alert alert-success\">\n              <strong>Login Successfull!</strong>\n            </div>\n          );\n        } \n        else if (this.state.loginStatus === 4) {\n          return (\n            <div class=\"alert alert-danger\">\n              <strong>Invalid Login Details</strong>\n            </div>\n          );\n        }\n      };\n\n    render(){\n\n      if (AuthHandler.loggedIn()) {\n        return <Redirect to={Config.homeUrl} />;\n      }\n\n        document.body.className = \"login-page\";\n\n        return(\n            <React.Fragment>\n        <GoogleFontLoader\n          fonts={[\n            {\n              font: \"Roboto\",\n              weights: [400, 700],\n            },\n          ]}\n          subsets={[\"latin\", \"cyrillic-ext\"]}\n        />\n        <GoogleFontLoader\n          fonts={[\n            {\n              font: \"Material+Icons\",\n            },\n          ]}\n        />\n            <div class=\"login-box\">\n        <div class=\"logo\">\n            <a href=\"javascript:void(0);\">Zab<b>medicals</b></a>\n            <small>Medical Store Managment System</small>\n        </div>\n        <div class=\"card\">\n            <div class=\"body\">\n                <form id=\"sign_in\" method=\"POST\" onSubmit={this.formSubmit}>\n                    <div class=\"msg\">Sign in to Zabmedicals</div>\n                    <div class=\"input-group\">\n                        <span class=\"input-group-addon\">\n                            <i class=\"material-icons\">person</i>\n                        </span>\n                        <div class=\"form-line\">\n                            <input type=\"text\" class=\"form-control\" name=\"username\" placeholder=\"Username\" required autofocus onChange={this.saveInputs}/>\n                        </div>\n                    </div>\n                    <div class=\"input-group\">\n                        <span class=\"input-group-addon\">\n                            <i class=\"material-icons\">lock</i>\n                        </span>\n                        <div class=\"form-line\">\n                            <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" required onChange={this.saveInputs}/>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-xs-8 p-t-5\">\n                            <input type=\"checkbox\" name=\"rememberme\" id=\"rememberme\" class=\"filled-in chk-col-pink\"/>\n                            <label for=\"rememberme\">Remember Me</label>\n                        </div>\n                        <div class=\"col-xs-4\">\n                            <button class=\"btn btn-block bg-pink waves-effect\" type=\"submit\"  disabled={this.state.btnDisabled}>SIGN IN</button>\n                        </div>\n                    </div>\n                    <div class=\"row m-t-15 m-b--20\">\n                        <div class=\"col-xs-6\">\n                            <a href=\"sign-up.html\">Register Now!</a>\n                        </div>\n                        <div class=\"col-xs-6 align-right\">\n                            <a href=\"forgot-password.html\">Forgot Password?</a>\n                        </div>\n                        <div className=\"col-xs-12\">{this.getMessages()}</div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n\n    </React.Fragment>\n\n        )\n    }\n}\n\nexport default Login","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/utils/AuthHandler.js",[],"/home/safwan/Documents/projects/python/Msms/msms/frontend/src/utils/Config.js",[],"/home/safwan/Documents/projects/python/Msms/msms/frontend/src/components/SideBar.js",["132","133","134"],"import React from 'react'\nimport usericon from \"adminbsb-materialdesign/images/user.png\";\nimport Config from \"../utils/Config\";\nimport { Link } from \"react-router-dom\";\n\nclass Sidebar extends React.Component{\n\n    state = {\n        defaultClass: \"btn-group user-helper-dropdown\",\n    };\n\n    constructor(props) {\n        super(props);\n        this.divref = React.createRef();\n        this.divref2 = React.createRef();\n      }\n\n    componentWillMount() {\n        document.addEventListener(\"mousedown\", this.handleMouseClick, false);\n      }\n    \n      componentWillUnmount() {\n        document.removeEventListener(\"mousedown\", this.handleMouseClick, false);\n      }\n\n      handleMouseClick = (event) => {\n        if (\n          event.target === this.divref.current ||\n          event.target === this.divref2.current\n        ) {\n          console.log(\"Click Element\");\n          return;\n        } else {\n          console.log(\"Click Outside\");\n          this.setState({ defaultClass: \"btn-group user-helper-dropdown\" });\n        }\n      };\n\n    showLogoutMenu = () => {\n        if (this.state.defaultClass == \"btn-group user-helper-dropdown\") {\n          this.setState({ defaultClass: \"btn-group user-helper-dropdown open\" });\n        } else {\n          this.setState({ defaultClass: \"btn-group user-helper-dropdown\" });\n        }\n    };\n\n    render() {\n        return (\n            <section>\n            <aside id=\"leftsidebar\" className=\"sidebar\">\n              <div className=\"user-info\">\n                <div className=\"image\">\n                  <img src={usericon} width=\"48\" height=\"48\" alt=\"User\" />\n                </div>\n                <div className=\"info-container\">\n                  <div\n                    className=\"name\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                  >\n                    Zabmedicals\n                  </div>\n                  <div className=\"email\">Zabmedicals@gmail.com</div>\n                  <div className={this.state.defaultClass}>\n                    <i\n                      className=\"material-icons\"\n                      data-toggle=\"dropdown\"\n                      aria-haspopup=\"true\"\n                      aria-expanded=\"true\"\n                      onClick={this.showLogoutMenu}\n                      ref={this.divref}\n                    >\n                      keyboard_arrow_down\n                    </i>\n                    <ul className=\"dropdown-menu pull-right\">\n                      <li>\n                        <a\n                          href={Config.logoutPageUrl}\n                          className=\" waves-effect waves-block\"\n                          ref={this.divref2}\n                        >\n                          <i className=\"material-icons\">input</i>Sign Out\n                        </a>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n    \n              <div className=\"menu\">\n                <div\n                  className=\"slimScrollDiv\"\n                  style={{\n                    position: \"relative\",\n                    overflow: \"hidden\",\n                    width: \"auto\",\n                  }}\n                >\n                  <ul\n                    className=\"list\"\n                    style={{ overflow: \"hidden\", width: \"auto\" }}\n                  >\n                    {Config.sidebarItem.map((item) => (\n                      <li\n                        key={item.index}\n                        className={\n                          item.index == this.props.activepage ? \"active\" : \"\"\n                        }\n                      >\n                        <Link\n                          to={item.url}\n                          className=\"toggled waves-effect waves-block\"\n                        >\n                          <i className=\"material-icons\">{item.icons}</i>\n                          <span>{item.title}</span>\n                        </Link>\n                      </li>\n                    ))}\n                  </ul>\n                  <div\n                    className=\"slimScrollBar\"\n                    style={{\n                      background: \"rgba(0, 0, 0, 0.5)\",\n                      width: \"4px\",\n                      position: \"absolute\",\n                      top: \"0px\",\n                      opacity: \"0.4\",\n                      display: \"none\",\n                      borderRadius: \"0px\",\n                      zIndex: \"99\",\n                      right: \"1px\",\n                      height: \"30px\",\n                    }}\n                  ></div>\n                  <div\n                    className=\"slimScrollRail\"\n                    style={{\n                      width: \"4px\",\n                      height: \"100%\",\n                      position: \"absolute\",\n                      top: \"0px\",\n                      display: \"none\",\n                      borderRadius: \"0px\",\n                      background: \"rgb(51, 51, 51)\",\n                      opacity: \"0.2\",\n                      zIndex: \"90\",\n                      right: \"1px\",\n                    }}\n                  ></div>\n                </div>\n              </div>\n    \n              <div className=\"legal\">\n                <div className=\"copyright\">\n                  © 2020 - 2021{\" \"}\n                  <a href=\"#\">Zabmedicals - Medical Store Management System</a>.\n                </div>\n                <div className=\"version\">\n                  <b>Version: </b> 1.0.5\n                </div>\n              </div>\n            </aside>\n          </section>\n        );\n      }\n\n}\n\nexport default Sidebar;","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/components/NavBar.js",["135","136"],"import React from \"react\";\n\nclass Navbar extends React.Component {\n  render() {\n    return (\n      <nav className=\"navbar\">\n        <div className=\"container-fluid\">\n          <div className=\"navbar-header\">\n            <a href=\"#\" className=\"bars\" onClick={this.props.onBarClick}></a>\n            <a className=\"navbar-brand\" href=\"index.html\">\n              Medical Store Management System\n            </a>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/components/Overlay.js",[],"/home/safwan/Documents/projects/python/Msms/msms/frontend/src/utils/PrivateRoute.js",["137"],"import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthHandler from \"./AuthHandler\";\n\nexport var PrivateRoute = ({ component: Component, ...rest }) => {\n  console.log({ ...rest });\n  console.log(rest);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        AuthHandler.loggedIn() ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n};","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/HomeComponent.js",[],"/home/safwan/Documents/projects/python/Msms/msms/frontend/src/components/MainComponent.js",["138","139","140"],"import React from 'react'\nimport Navbar from './NavBar'\nimport Overlay from './Overlay'\nimport Sidebar from './SideBar'\nimport HomeComponent from '../pages/HomeComponent'\nimport GoogleFontLoader from \"react-google-font-loader\";\nimport 'adminbsb-materialdesign/css/themes/all-themes.css'\n\n\n\nclass MainComponent extends React.Component{\n\n\n    state = {\n        bodyClass: \"theme-red ls-closed\",\n        displayOverlay: \"none\",\n        width: window.screen.width,\n      };\n\n\n    onBarClick = () => {\n        if (this.state.bodyClass == \"theme-red ls-closed overlay-open\") {\n          this.setState({ bodyClass: \"theme-red ls-closed\" });\n          this.setState({ displayOverlay: \"none\" });\n        } else if (this.state.bodyClass == \"theme-red ls-closed\") {\n          this.setState({ bodyClass: \"theme-red ls-closed overlay-open\" });\n          this.setState({ displayOverlay: \"block\" });\n        }\n      };\n\n      onscreenresize = () => {\n        console.log(window.screen.width);\n        this.setState({ width: window.screen.width });\n      };\n    \n      componentWillMount() {\n        window.addEventListener(\"resize\", this.onscreenresize);\n      }\n    \n      componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.onscreenresize);\n      }\n    \n\n      componentDidMount() {\n        var inputall = document.querySelectorAll(\"input\");\n        inputall.forEach((input) => {\n          input.addEventListener(\"focus\", function () {\n            this.parentNode.className = \"form-line focused\";\n          });\n        });\n    \n        inputall.forEach((input) => {\n          input.addEventListener(\"blur\", function () {\n            this.parentNode.className = \"form-line\";\n          });\n        });\n      }\n\n   \n\n    render(){\n\n        if (this.state.width > 1150) {\n            document.getElementById(\"root\").className = \"theme-red\";\n          } else {\n            document.getElementById(\"root\").className = this.state.bodyClass;\n          }\n\n          var Page = this.props.page;\n\n    return(\n        <React.Fragment>\n        <GoogleFontLoader\n          fonts={[\n            {\n              font: \"Roboto\",\n              weights: [400, 700],\n            },\n          ]}\n          subsets={[\"latin\", \"cyrillic-ext\"]}\n        />\n        <GoogleFontLoader\n          fonts={[\n            {\n              font: \"Material+Icons\",\n            },\n          ]}\n        />\n            <Overlay display={this.state.displayOverlay}/>\n            <Navbar onBarClick={this.onBarClick}/>\n            <Sidebar activepage={this.props.activepage} />\n            <Page {...this.props} />\n        </React.Fragment>\n    )\n    }\n}\n\nexport default MainComponent;","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/CompanyComponent.js",["141","142","143","144","145","146","147","148"],"import React from \"react\";\nimport AuthHandler from \"../utils/AuthHandler\";\nimport APIHandler from \"../utils/ApiHandler\";\n\n\nclass CompanyComponent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.formSubmit = this.formSubmit.bind(this);\n  }\n\n  state = {\n    errorRes: false,\n    errorMessage: \"\",\n    btnMessage: 0,\n    sendData: false,\n    companyDataList: [],\n    dataLoaded: false,\n  };\n\n  async formSubmit(event) {\n    event.preventDefault();\n    this.setState({ btnMessage: 1 });\n\n    var apiHandler = new APIHandler();\n    var response = await apiHandler.saveCompanyData(\n      event.target.name.value,\n      event.target.license_no.value,\n      event.target.address.value,\n      event.target.contact_no.value,\n      event.target.email.value,\n      event.target.description.value\n    );\n    console.log(response);\n    this.setState({ btnMessage: 0 });\n    this.setState({ errorRes: response.data.error });\n    this.setState({ errorMessage: response.data.message });\n    this.setState({ sendData: true });\n  \n  }\n \n  \n  //This Method Work When Our Page is Ready\n  componentDidMount() {\n    this.fetchCompanyData();\n  }\n\n  async fetchCompanyData() {\n    var apihandler = new APIHandler();\n    var companydata = await apihandler.fetchAllCompany();\n    console.log(companydata);\n    this.setState({ companyDataList: companydata.data.data });\n    this.setState({ dataLoaded: true });\n  }\n\n  viewCompanyDetails = (company_id) => {\n    console.log(company_id);\n    console.log(this.props);\n    this.props.history.push(\"/companydetails/\" + company_id);\n  };\n\n  render() {\n    return(\n    <section className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"block-header\">\n            <h2>MANAGE COMPANY</h2>\n          </div>\n          <div className=\"row clearfix\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div className=\"card\">\n                <div className=\"header\">\n                  <h2>Add Company</h2>\n                </div>\n                <div className=\"body\">\n                  <form onSubmit={this.formSubmit}>\n                    <label htmlFor=\"email_address\">Name</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"name\"\n                          name=\"name\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Company Name\"\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">License No.</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"license_no\"\n                          name=\"license_no\"\n                          className=\"form-control\"\n                          placeholder=\"Enter License No.\"\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Address</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"address\"\n                          name=\"address\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Company Address\"\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Contact No.</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"contact_no\"\n                          name=\"contact_no\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Contact No.\"\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Email</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"email\"\n                          name=\"email\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Company Email\"\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Description</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"description\"\n                          name=\"description\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Description\"\n                        />\n                      </div>\n                    </div>\n                    <br />\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary m-t-15 waves-effect btn-block\"\n                      disabled={this.state.btnMessage == 0 ? false : true}\n                    >\n                      {this.state.btnMessage == 0\n                      ? \"Add Company\"\n                      : \"Adding Company Please Wait..\"}\n                      </button>\n                    <br />\n                    {this.state.errorRes == false &&\n                    this.state.sendData == true ? (\n                      <div className=\"alert alert-success\">\n                        <strong>Success!</strong> {this.state.errorMessage}.\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                    {this.state.errorRes == true &&\n                    this.state.sendData == true ? (\n                      <div className=\"alert alert-danger\">\n                        <strong>Failed!</strong>\n                        {this.state.errorMessage}.\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row clearfix\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div className=\"card\">\n                <div className=\"header\">\n                  {this.state.dataLoaded == false ? (\n                    <div className=\"text-center\">\n                      <div className=\"preloader pl-size-xl\">\n                        <div className=\"spinner-layer\">\n                          <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                          </div>\n                          <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  <h2>All Companies</h2>\n                </div>\n                <div className=\"body table-responsive\">\n                  <table className=\"table table-hover\">\n                    <thead>\n                      <tr>\n                        <th>#ID</th>\n                        <th>NAME</th>\n                        <th>License NO.</th>\n                        <th>Address</th>\n                        <th>Contact</th>\n                        <th>Email</th>\n                        <th>Description</th>\n                        <th>Added On</th>\n                        <th>Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.companyDataList.map((company) => (\n                        <tr key={company.id}>\n                          <td>{company.id}</td>\n                          <td>{company.name}</td>\n                          <td>{company.license_no}</td>\n                          <td>{company.address}</td>\n                          <td>{company.contact_no}</td>\n                          <td>{company.email}</td>\n                          <td>{company.description}</td>\n                          <td>{new Date(company.added_on).toLocaleString()}</td>\n                          <td>\n                            <button\n                              className=\"btn btn-block btn-warning\"\n                              onClick={() =>\n                                this.viewCompanyDetails(company.id)\n                              }\n                            >\n                              View\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n           \n  }\n}\n\nexport default CompanyComponent;","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/utils/PrivateRouteNew.js",["149"],"import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthHandler from \"./AuthHandler\";\nimport MainComponent from \"../components/MainComponent\";\n\nexport var PrivateRouteNew = ({ page, activepage, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        AuthHandler.loggedIn() ? (\n          <MainComponent page={page} activepage={activepage} {...props} />\n        ) : (\n          <Redirect to=\"/\" />\n        )\n      }\n    />\n  );\n};","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/LogoutComponent.js",[],"/home/safwan/Documents/projects/python/Msms/msms/frontend/src/utils/ApiHandler.js",["150","151"],"import { reactLocalStorage } from \"reactjs-localstorage\";\n\nconst { default: AuthHandler } = require(\"./AuthHandler\");\nconst { default: Axios } = require(\"axios\");\nconst { default: Config } = require(\"./Config\");\n\nclass APIHandler {\n  async checkLogin() {\n    if (AuthHandler.checkTokenExpiry()) {\n      try {\n        var response = await Axios.post(Config.refreshApiUrl, {\n          refresh: AuthHandler.getRefreshToken(),\n        });\n\n        reactLocalStorage.set(\"token\", response.data.access);\n      } catch (error) {\n        console.log(error);\n\n        //Not Using Valid Token for Refresh then Logout the User\n        AuthHandler.logoutUser();\n        window.location = \"/\";\n      }\n    }\n  }\n\n  async saveCompanyData(\n    name,\n    license_no,\n    address,\n    contact_no,\n    email,\n    description\n  ) {\n    await this.checkLogin();\n    //Wait Until Token Get Updated\n\n    var response = await Axios.post(\n        Config.companyApiUrl,\n        {\n          name: name,\n          license_no: license_no,\n          address: address,\n          contact_no: contact_no,\n          email: email,\n          description: description,\n        },\n        { headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() } }\n      );\n  \n      return response;\n}\n\n\nasync fetchAllCompany() {\n    await this.checkLogin();\n\n    var response = await Axios.get(Config.companyApiUrl, {\n      headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() },\n    });\n\n    return response;\n  }\n\n  async fetchCompanyDetails(id) {\n    await this.checkLogin();\n\n    var response = await Axios.get(Config.companyApiUrl + \"\" + id + \"/\", {\n      headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() },\n    });\n\n    return response;\n  }\n\n  async fetchMedicineByName(name) {\n    if (name != \"\") {\n      await this.checkLogin();\n\n      var response = await Axios.get(Config.medicineNameApiUrl + \"\" + name, {\n        headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() },\n      });\n\n      return response;\n    } else {\n      return { data: [] };\n    }\n  }\n\n  async editCompanyData(\n    name,\n    license_no,\n    address,\n    contact_no,\n    email,\n    description,\n    id\n  ) {\n    await this.checkLogin();\n    //Wait Until Token Get Updated\n\n    var response = await Axios.put(\n      Config.companyApiUrl + \"\" + id + \"/\",\n      {\n        name: name,\n        license_no: license_no,\n        address: address,\n        contact_no: contact_no,\n        email: email,\n        description: description,\n      },\n      { headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() } }\n    );\n\n    return response;\n  }\n\n  async saveCompanyBankData(bank_account_no, ifsc_no, company_id) {\n    await this.checkLogin();\n    //Wait Until Token Get Updated\n\n    var response = await Axios.post(\n      Config.companyBankApiUrl,\n      {\n        bank_account_no: bank_account_no,\n        ifsc_no: ifsc_no,\n        company_id: company_id,\n      },\n      { headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() } }\n    );\n\n    return response;\n  }\n\n  async fetchCompanyBankDetails(id) {\n    await this.checkLogin();\n\n    var response = await Axios.get(Config.companyBankApiUrl + \"\" + id + \"/\", {\n      headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() },\n    });\n\n    return response;\n  }\n\n  async editCompanyBankData(bank_account_no, ifsc_no, company_id, id) {\n    await this.checkLogin();\n    //Wait Until Token Get Updated\n\n    var response = await Axios.put(\n      Config.companyBankApiUrl + \"\" + id + \"/\",\n      {\n        bank_account_no: bank_account_no,\n        ifsc_no: ifsc_no,\n        company_id: company_id,\n      },\n      { headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() } }\n    );\n\n    return response;\n  }\n\n  async fetchCompanyOnly() {\n    await this.checkLogin();\n\n    var response = await Axios.get(Config.companyOnly, {\n      headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() },\n    });\n\n    return response;\n  }\n\n  async saveMedicineData(\n    name,\n    medical_typ,\n    buy_price,\n    sell_price,\n    c_gst,\n    s_gst,\n    batch_no,\n    shelf_no,\n    expire_date,\n    mfg_date,\n    company_id,\n    description,\n    in_stock_total,\n    qty_in_strip,\n    medicinedetails\n  ) {\n    await this.checkLogin();\n    //Wait Until Token Get Updated\n\n    var response = await Axios.post(\n      Config.medicineApiUrl,\n      {\n        name: name,\n        medical_typ: medical_typ,\n        buy_price: buy_price,\n        sell_price: sell_price,\n        c_gst: c_gst,\n        s_gst: s_gst,\n        batch_no: batch_no,\n        shelf_no: shelf_no,\n        expire_date: expire_date,\n        mfg_date: mfg_date,\n        company_id: company_id,\n        description: description,\n        in_stock_total: in_stock_total,\n        qty_in_strip: qty_in_strip,\n        medicine_details: medicinedetails,\n      },\n      { headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() } }\n    );\n\n    return response;\n  }\n\n  async fetchAllMedicine() {\n    await this.checkLogin();\n\n    var response = await Axios.get(Config.medicineApiUrl, {\n      headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() },\n    });\n\n    return response;\n  }\n\n  async editMedicineData(\n    name,\n    medical_typ,\n    buy_price,\n    sell_price,\n    c_gst,\n    s_gst,\n    batch_no,\n    shelf_no,\n    expire_date,\n    mfg_date,\n    company_id,\n    description,\n    in_stock_total,\n    qty_in_strip,\n    medicinedetails,\n    id\n  ) {\n    await this.checkLogin();\n    //Wait Until Token Get Updated\n\n    var response = await Axios.put(\n      Config.medicineApiUrl + \"\" + id + \"/\",\n      {\n        name: name,\n        medical_typ: medical_typ,\n        buy_price: buy_price,\n        sell_price: sell_price,\n        c_gst: c_gst,\n        s_gst: s_gst,\n        batch_no: batch_no,\n        shelf_no: shelf_no,\n        expire_date: expire_date,\n        mfg_date: mfg_date,\n        company_id: company_id,\n        description: description,\n        in_stock_total: in_stock_total,\n        qty_in_strip: qty_in_strip,\n        medicine_details: medicinedetails,\n      },\n      { headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() } }\n    );\n\n    return response;\n  }\n\n  async fetchCompanyOnly() {\n    await this.checkLogin();\n\n    var response = await Axios.get(Config.companyOnly, {\n      headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() },\n    });\n\n    return response;\n  }\n\n  async saveCompanyTransactionData(\n    company_id,\n    transaction_type,\n    transaction_amt,\n    transaction_date,\n    payment_mode\n  ) {\n    await this.checkLogin();\n    //Wait Until Token Get Updated\n\n    var response = await Axios.post(\n      Config.companyAccountApiUrl,\n      {\n        company_id: company_id,\n        transaction_type: transaction_type,\n        transaction_amt: transaction_amt,\n        transaction_date: transaction_date,\n        payment_mode: payment_mode,\n      },\n      { headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() } }\n    );\n\n    return response;\n  }\n\n  async fetchAllCompanyAccount() {\n    await this.checkLogin();\n\n    var response = await Axios.get(Config.companyAccountApiUrl, {\n      headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() },\n    });\n\n    return response;\n  }\n\n  async saveEmployeeData(name, joining_date, phone, address) {\n    await this.checkLogin();\n    //Wait Until Token Get Updated\n\n    var response = await Axios.post(\n      Config.employeeApiURL,\n      {\n        name: name,\n        joining_date: joining_date,\n        phone: phone,\n        address: address,\n      },\n      { headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() } }\n    );\n\n    return response;\n  }\n\n  async saveCustomerRequestData(name, phone, medicine_details) {\n    await this.checkLogin();\n    //Wait Until Token Get Updated\n\n    var response = await Axios.post(\n      Config.customerRequestApiUrl,\n      {\n        customer_name: name,\n        phone: phone,\n        medicine_details: medicine_details,\n      },\n      { headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() } }\n    );\n\n    return response;\n  }\n\n  async updateCustomerRequest(customer_id, name, phone, medicine_details) {\n    await this.checkLogin();\n    //Wait Until Token Get Updated\n\n    var response = await Axios.put(\n      Config.customerRequestApiUrl + \"\" + customer_id + \"/\",\n      {\n        customer_name: name,\n        phone: phone,\n        medicine_details: medicine_details,\n        status: 1,\n      },\n      { headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() } }\n    );\n    return response;\n  }\n\n  async fetchEmployee() {\n    await this.checkLogin();\n\n    var response = await Axios.get(Config.employeeApiURL, {\n      headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() },\n    });\n\n    return response;\n  }\n\n  async fetchEmployeeById(id) {\n    await this.checkLogin();\n\n    var response = await Axios.get(Config.employeeApiURL + \"\" + id + \"/\", {\n      headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() },\n    });\n\n    return response;\n  }\n\n  async fetchSalaryEmployee(id) {\n    await this.checkLogin();\n\n    var response = await Axios.get(Config.employeeSalaryByIdApiUrl + \"\" + id, {\n      headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() },\n    });\n\n    return response;\n  }\n\n  async fetchBankEmployee(id) {\n    await this.checkLogin();\n\n    var response = await Axios.get(Config.employeeBankApiUrlBYID + \"\" + id, {\n      headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() },\n    });\n\n    return response;\n  }\n\n  async editEmployeeData(name, joining_date, phone, address, id) {\n    await this.checkLogin();\n    //Wait Until Token Get Updated\n\n    var response = await Axios.put(\n      Config.employeeApiURL + \"\" + id + \"/\",\n      {\n        name: name,\n        joining_date: joining_date,\n        phone: phone,\n        address: address,\n      },\n      { headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() } }\n    );\n\n    return response;\n  }\n\n  async AddEmployeeSalaryData(salary_date, salary_amount, employee_id) {\n    await this.checkLogin();\n    //Wait Until Token Get Updated\n\n    var response = await Axios.post(\n      Config.employeeSalaryApiUrl,\n      {\n        salary_date: salary_date,\n        salary_amount: salary_amount,\n        employee_id: employee_id,\n      },\n      { headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() } }\n    );\n\n    return response;\n  }\n\n\n  async AddEmployeeBankData(bank_account_no, ifsc_no, employee_id) {\n    await this.checkLogin();\n    //Wait Until Token Get Updated\n\n    var response = await Axios.post(\n      Config.employeeBankApiUrl,\n      {\n        bank_account_no: bank_account_no,\n        ifsc_no: ifsc_no,\n        employee_id: employee_id,\n      },\n      { headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() } }\n    );\n\n    return response;\n  }\n\n  async generateBill(name, address, phone, medicineDetails) {\n    await this.checkLogin();\n\n    var response = await Axios.post(\n      Config.generateBillApiUrl,\n      {\n        name: name,\n        address: address,\n        contact: phone,\n        medicine_details: medicineDetails,\n      },\n      {\n        headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() },\n      }\n    );\n\n    return response;\n  }\n\n  async fetchAllCustomerRequest() {\n    await this.checkLogin();\n\n    var response = await Axios.get(Config.customerRequestApiUrl, {\n      headers: { Authorization: \"Bearer \" + AuthHandler.getLoginToken() },\n    });\n\n    return response;\n  }\n\n}\n\n\n\nexport default APIHandler;","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/CompanyDetailsComponent.js",["152","153","154","155","156","157","158","159","160"],"import React from \"react\";\nimport AuthHandler from \"../utils/AuthHandler\";\nimport APIHandler from \"../utils/ApiHandler\";\n\n\nclass CompanyDetailsComponent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.formSubmit = this.formSubmit.bind(this);\n    console.log(props.match.params.id);\n  }\n\n  state = {\n    errorRes: false,\n    errorMessage: \"\",\n    btnMessage: 0,\n    sendData: false,\n    companyBank: [],\n    name: \"\",\n    license_no: \"\",\n    address: \"\",\n    contact_no: \"\",\n    email: \"\",\n    description: \"\",\n    dataLoaded: false,\n  };\n\n  async formSubmit(event) {\n    event.preventDefault();\n    this.setState({ btnMessage: 1 });\n\n    var apiHandler = new APIHandler();\n    var response = await apiHandler.editCompanyData(\n      event.target.name.value,\n      event.target.license_no.value,\n      event.target.address.value,\n      event.target.contact_no.value,\n      event.target.email.value,\n      event.target.description.value,\n      this.props.match.params.id\n    );\n    console.log(response);\n    this.setState({ btnMessage: 0 });\n    this.setState({ errorRes: response.data.error });\n    this.setState({ errorMessage: response.data.message });\n    this.setState({ sendData: true });\n  }\n \n  \n  //This Method Work When Our Page is Ready\n  componentDidMount() {\n    this.fetchCompanyData();\n  }\n\n  async fetchCompanyData() {\n    var apihandler = new APIHandler();\n    var companydata = await apihandler.fetchCompanyDetails(\n      this.props.match.params.id\n    );\n    console.log(companydata);\n    this.setState({ companyBank: companydata.data.data.company_bank });\n    this.setState({ name: companydata.data.data.name });\n    this.setState({ license_no: companydata.data.data.license_no });\n    this.setState({ address: companydata.data.data.address });\n    this.setState({ contact_no: companydata.data.data.contact_no });\n    this.setState({ email: companydata.data.data.email });\n    this.setState({ description: companydata.data.data.description });\n    this.setState({ dataLoaded: true });\n  }\n\n  viewCompanyDetails = (company_id) => {\n    console.log(company_id);\n    console.log(this.props);\n    this.props.history.push(\"/companydetails/\" + company_id);\n  };\n\n  AddCompanyBank = () => {\n    this.props.history.push(\"/addCompanyBank/\" + this.props.match.params.id);\n  };\n\n  EditCompanyBank = (company_bank_id) => {\n    console.log(company_bank_id);\n    this.props.history.push(\n      \"/editcompanybank/\" + this.props.match.params.id + \"/\" + company_bank_id\n    );\n  };\n\n  render() {\n    return(\n    <section className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"block-header\">\n            <h2>MANAGE COMPANY</h2>\n          </div>\n          <div className=\"row clearfix\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div className=\"card\">\n                <div className=\"header\">\n                {this.state.dataLoaded == false ? (\n                    <div className=\"text-center\">\n                      <div className=\"preloader pl-size-xl\">\n                        <div className=\"spinner-layer\">\n                          <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                          </div>\n                          <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  <h2>Edit Company</h2>\n                </div>\n                <div className=\"body\">\n                  <form onSubmit={this.formSubmit}>\n                    <label htmlFor=\"email_address\">Name</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"name\"\n                          name=\"name\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Company Name\"\n                          defaultValue={this.state.name}\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">License No.</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"license_no\"\n                          name=\"license_no\"\n                          className=\"form-control\"\n                          placeholder=\"Enter License No.\"\n                          defaultValue={this.state.license_no}\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Address</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"address\"\n                          name=\"address\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Company Address\"\n                          defaultValue={this.state.address}\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Contact No.</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"contact_no\"\n                          name=\"contact_no\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Contact No.\"\n                          defaultValue={this.state.contact_no}\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Email</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"email\"\n                          name=\"email\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Company Email\"\n                          defaultValue={this.state.email}\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Description</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"description\"\n                          name=\"description\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Description\"\n                          defaultValue={this.state.description}\n                        />\n                      </div>\n                    </div>\n                    <br />\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary m-t-15 waves-effect btn-block\"\n                      disabled={this.state.btnMessage == 0 ? false : true}\n                    >\n                      {this.state.btnMessage == 0\n                      ? \"Edit Company\"\n                      : \"Editing Company Please Wait..\"}\n                      </button>\n                    <br />\n                    {this.state.errorRes == false &&\n                    this.state.sendData == true ? (\n                      <div className=\"alert alert-success\">\n                        <strong>Success!</strong> {this.state.errorMessage}.\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                    {this.state.errorRes == true &&\n                    this.state.sendData == true ? (\n                      <div className=\"alert alert-danger\">\n                        <strong>Failed!</strong>\n                        {this.state.errorMessage}.\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row clearfix\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div className=\"card\">\n                <div className=\"header\">\n                  {this.state.dataLoaded == false ? (\n                    <div className=\"text-center\">\n                      <div className=\"preloader pl-size-xl\">\n                        <div className=\"spinner-layer\">\n                          <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                          </div>\n                          <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  <h2>Company Bank</h2>\n                  <div className=\"header-dropdown m-r--5\">\n                    <button\n                      className=\"btn btn-info\"\n                      onClick={this.AddCompanyBank}\n                    >\n                      Add Company\n                    </button>\n                  </div>\n                </div>\n                <div className=\"body table-responsive\">\n                  <table className=\"table table-hover\">\n                    <thead>\n                    <tr>\n                        <th>#ID</th>\n                        <th>Account No.</th>\n                        <th>IFSC Code</th>\n                        <th>Added On</th>\n                        <th>Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.companyBank.map((company) => (\n                        <tr key={company.id}>\n                          <td>{company.id}</td>\n                          <td>{company.bank_account_no}</td>\n                          <td>{company.ifsc_no}</td>\n                          <td>{new Date(company.added_on).toLocaleString()}</td>\n                          <td>\n                          <button\n                              className=\"btn btn-block btn-warning\"\n                              onClick={() => this.EditCompanyBank(company.id)}\n                            >\n                              EDIT\n                            </button>\n                            <button className=\"btn btn-block btn-danger\">\n                              DELETE\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n           \n  }\n}\n\nexport default CompanyDetailsComponent;","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/CompanyAddBankComponent.js",["161","162","163","164","165","166","167"],"import React from \"react\";\nimport AuthHandler from \"../utils/AuthHandler\";\nimport APIHandler from \"../utils/ApiHandler\";\nimport { Link } from \"react-router-dom\";\n\nclass CompanyAddBankComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formSubmit = this.formSubmit.bind(this);\n  }\n  state = {\n    errorRes: false,\n    errorMessage: \"\",\n    btnMessage: 0,\n    sendData: false,\n  };\n\n  async formSubmit(event) {\n    event.preventDefault();\n    this.setState({ btnMessage: 1 });\n\n    var apiHandler = new APIHandler();\n    var response = await apiHandler.saveCompanyBankData(\n      event.target.bank_account_no.value,\n      event.target.ifsc_no.value,\n      this.props.match.params.id\n    );\n    console.log(response);\n    this.setState({ btnMessage: 0 });\n    this.setState({ errorRes: response.data.error });\n    this.setState({ errorMessage: response.data.message });\n    this.setState({ sendData: true });\n  }\n\n  render() {\n    return (\n      <section className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"block-header\">\n            <h2>MANAGE COMPANY</h2>\n          </div>\n          <div className=\"row clearfix\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div className=\"card\">\n                <div className=\"header\">\n                  <h2>Add Company Bank #{this.props.match.params.id}</h2>\n                </div>\n                <div className=\"body\">\n                  <form onSubmit={this.formSubmit}>\n                    <label htmlFor=\"email_address\">Account No</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"bank_account_no\"\n                          name=\"bank_account_no\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Company Account No.\"\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">IFSC No.</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"ifsc_no\"\n                          name=\"ifsc_no\"\n                          className=\"form-control\"\n                          placeholder=\"Enter IFSC Code.\"\n                        />\n                      </div>\n                    </div>\n\n                    <br />\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary m-t-15 waves-effect btn-block\"\n                      disabled={this.state.btnMessage == 0 ? false : true}\n                    >\n                      {this.state.btnMessage == 0\n                        ? \"Add Company Bank\"\n                        : \"Adding Company Bank Please Wait..\"}\n                    </button>\n                    <br />\n                    {this.state.errorRes == false &&\n                    this.state.sendData == true ? (\n                      <div className=\"alert alert-success\">\n                        <strong>Success!</strong> {this.state.errorMessage}.\n                        <Link\n                          to={\"/companydetails/\" + this.props.match.params.id}\n                          className=\"btn btn-info\"\n                        >\n                          Back to Company Details\n                        </Link>\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                    {this.state.errorRes == true &&\n                    this.state.sendData == true ? (\n                      <div className=\"alert alert-danger\">\n                        <strong>Failed!</strong>\n                        {this.state.errorMessage}.\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default CompanyAddBankComponent;","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/CompanyEditBankComponent.js",["168","169","170","171","172","173","174"],"import React from \"react\";\nimport AuthHandler from \"../utils/AuthHandler\";\nimport APIHandler from \"../utils/ApiHandler\";\nimport { Link } from \"react-router-dom\";\n\nclass CompanyEditBankComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formSubmit = this.formSubmit.bind(this);\n  }\n  state = {\n    errorRes: false,\n    errorMessage: \"\",\n    btnMessage: 0,\n    sendData: false,\n    ifsc_no: \"\",\n    bank_account_no: \"\",\n  };\n\n  async formSubmit(event) {\n    event.preventDefault();\n    this.setState({ btnMessage: 1 });\n\n    var apiHandler = new APIHandler();\n    var response = await apiHandler.editCompanyBankData(\n      event.target.bank_account_no.value,\n      event.target.ifsc_no.value,\n      this.props.match.params.company_id,\n      this.props.match.params.id\n    );\n    console.log(response);\n    this.setState({ btnMessage: 0 });\n    this.setState({ errorRes: response.data.error });\n    this.setState({ errorMessage: response.data.message });\n    this.setState({ sendData: true });\n  }\n\n  componentDidMount() {\n    this.fetchCompanyBankData();\n  }\n\n  async fetchCompanyBankData() {\n    var apihandler = new APIHandler();\n    var companydata = await apihandler.fetchCompanyBankDetails(\n      this.props.match.params.id\n    );\n    console.log(companydata);\n    this.setState({ bank_account_no: companydata.data.data.bank_account_no });\n    this.setState({ ifsc_no: companydata.data.data.ifsc_no });\n    this.setState({ dataLoaded: true });\n  }\n\n  render() {\n    return (\n      <section className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"block-header\">\n            <h2>MANAGE COMPANY</h2>\n          </div>\n          <div className=\"row clearfix\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div className=\"card\">\n                <div className=\"header\">\n                  <h2>Edit Company Bank #{this.props.match.params.id}</h2>\n                </div>\n                <div className=\"body\">\n                  <form onSubmit={this.formSubmit}>\n                    <label htmlFor=\"email_address\">Account No</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"bank_account_no\"\n                          name=\"bank_account_no\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Company Account No.\"\n                          defaultValue={this.state.bank_account_no}\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">IFSC No.</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"ifsc_no\"\n                          name=\"ifsc_no\"\n                          className=\"form-control\"\n                          placeholder=\"Enter IFSC Code.\"\n                          defaultValue={this.state.ifsc_no}\n                        />\n                      </div>\n                    </div>\n\n                    <br />\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary m-t-15 waves-effect btn-block\"\n                      disabled={this.state.btnMessage == 0 ? false : true}\n                    >\n                      {this.state.btnMessage == 0\n                        ? \"Edit Company Bank\"\n                        : \"Edit Company Bank Please Wait..\"}\n                    </button>\n                    <br />\n                    {this.state.errorRes == false &&\n                    this.state.sendData == true ? (\n                      <div className=\"alert alert-success\">\n                        <strong>Success!</strong> {this.state.errorMessage}.\n                        <Link\n                          to={\n                            \"/companydetails/\" +\n                            this.props.match.params.company_id\n                          }\n                          className=\"btn btn-info\"\n                        >\n                          Back to Company Details\n                        </Link>\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                    {this.state.errorRes == true &&\n                    this.state.sendData == true ? (\n                      <div className=\"alert alert-danger\">\n                        <strong>Failed!</strong>\n                        {this.state.errorMessage}.\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default CompanyEditBankComponent;","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/MedicineAddComponent.js",["175","176","177","178","179","180","181","182","183","184"],"import React from \"react\";\nimport AuthHandler from \"../utils/AuthHandler\";\nimport APIHandler from \"../utils/ApiHandler\";\nimport { Link } from \"react-router-dom\";\n\nclass MedicineAddComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formSubmit = this.formSubmit.bind(this);\n  }\n  state = {\n    errorRes: false,\n    errorMessage: \"\",\n    btnMessage: 0,\n    sendData: false,\n    companylist: [],\n    medicinedetails: [\n      { salt_name: \"\", salt_qty: \"\", salt_qty_type: \"\", description: \"\" },\n    ],\n  };\n\n  async formSubmit(event) {\n    event.preventDefault();\n    this.setState({ btnMessage: 1 });\n\n    var apiHandler = new APIHandler();\n    var response = await apiHandler.saveMedicineData(\n      event.target.name.value,\n      event.target.medical_typ.value,\n      event.target.buy_price.value,\n      event.target.sell_price.value,\n      event.target.c_gst.value,\n      event.target.s_gst.value,\n      event.target.batch_no.value,\n      event.target.shelf_no.value,\n      event.target.expire_date.value,\n      event.target.mfg_date.value,\n      event.target.company_id.value,\n      event.target.description1.value,\n      event.target.in_stock_total.value,\n      event.target.qty_in_strip.value,\n      this.state.medicinedetails\n    );\n    console.log(response);\n    this.setState({ btnMessage: 0 });\n    this.setState({ errorRes: response.data.error });\n    this.setState({ errorMessage: response.data.message });\n    this.setState({ sendData: true });\n  }\n\n  \n  componentDidMount() {\n    this.LoadCompany();\n  }\n\n  async LoadCompany() {\n    var apihandler = new APIHandler();\n    var companydata = await apihandler.fetchCompanyOnly();\n    this.setState({ companylist: companydata.data });\n  }\n\n  AddItem = () => {\n    var item = {\n      salt_name: \"\",\n      salt_qty: \"\",\n      salt_qty_type: \"\",\n      description: \"\",\n    };\n\n    this.state.medicinedetails.push(item);\n    this.setState({});\n  };\n\n  RemoveItems = () => {\n    if (this.state.medicinedetails.length != 1) {\n      this.state.medicinedetails.pop(this.state.medicinedetails.length - 1);\n    }\n    this.setState({});\n  };\n\n  handleInput = (event) => {\n    var keyname = event.target.name;\n    var value = event.target.value;\n    var index = event.target.getAttribute(\"data-index\");\n    this.state.medicinedetails[index][keyname] = value;\n    this.setState({});\n    console.log(this.state.medicinedetails);\n  };\n\n  render() {\n    return (\n      <section className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"block-header\">\n            <h2>ADD Medicine</h2>\n          </div>\n          <div className=\"row clearfix\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div className=\"card\">\n                <div className=\"header\">\n                  <h2>Add Medicine</h2>\n                </div>\n                <div className=\"body\">\n                  <form onSubmit={this.formSubmit}>\n                    <label htmlFor=\"email_address\">Name</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"name\"\n                          name=\"name\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Name\"\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Medicine Type</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"medical_typ\"\n                          name=\"medical_typ\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Medicine Type\"\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Buy Price</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"buy_price\"\n                          name=\"buy_price\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Buy Price\"\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Sell Price</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"sell_price\"\n                          name=\"sell_price\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Sell Price\"\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">C GST</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"c_gst\"\n                          name=\"c_gst\"\n                          className=\"form-control\"\n                          placeholder=\"Enter C-GST\"\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">S GST</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"s_gst\"\n                          name=\"s_gst\"\n                          className=\"form-control\"\n                          placeholder=\"Enter S-GST\"\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Batch No.</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"batch_no\"\n                          name=\"batch_no\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Batch No\"\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Shelf No.</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"shelf_no\"\n                          name=\"shelf_no\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Shelf No\"\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Expire Date</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"date\"\n                          id=\"expire_date\"\n                          name=\"expire_date\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Expire Date\"\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Mfg Date</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"date\"\n                          id=\"mfg_date\"\n                          name=\"mfg_date\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Mfg Date\"\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Description.</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"description1\"\n                          name=\"description1\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Description\"\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">In Stock Total</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"in_stock_total\"\n                          name=\"in_stock_total\"\n                          className=\"form-control\"\n                          placeholder=\"Enter In Stock\"\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Qty. in Strip</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"qty_in_strip\"\n                          name=\"qty_in_strip\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Description\"\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Company</label>\n                    <div className=\"form-group\">\n                      <select\n                        className=\"form-control show-tick\"\n                        name=\"company_id\"\n                        id=\"company_id\"\n                      >\n                        {this.state.companylist.map((item) => (\n                          <option key={item.id} value={item.id}>\n                            {item.name}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    <div className=\"form-group\">\n                      <div className=\"col-lg-6\">\n                        <button\n                          className=\"btn btn-block btn-success\"\n                          onClick={this.AddItem}\n                          type=\"button\"\n                        >\n                          Add Details\n                        </button>\n                      </div>\n                      <div className=\"col-lg-6\">\n                        <button\n                          className=\"btn btn-block btn-danger\"\n                          type=\"button\"\n                          onClick={this.RemoveItems}\n                        >\n                          Remove Details\n                        </button>\n                      </div>\n                    </div>\n                    {this.state.medicinedetails.map((item, index) => (\n                      <div className=\"form-group row\" key={index}>\n                        <div className=\"col-lg-3\">\n                          <label htmlFor=\"email_address\">Salt Name</label>\n                          <div className=\"form-line\">\n                            <input\n                              type=\"text\"\n                              id=\"salt_name\"\n                              name=\"salt_name\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Salt name\"\n                              onChange={this.handleInput}\n                              data-index={index}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"col-lg-3\">\n                          <label htmlFor=\"email_address\">Salt Qty</label>\n                          <div className=\"form-line\">\n                            <input\n                              type=\"text\"\n                              id=\"salt_qty\"\n                              name=\"salt_qty\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Salt Qty\"\n                              onChange={this.handleInput}\n                              data-index={index}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"col-lg-3\">\n                          <label htmlFor=\"email_address\">Salt Qty Type</label>\n                          <div className=\"form-line\">\n                            <input\n                              type=\"text\"\n                              id=\"salt_qty_type\"\n                              name=\"salt_qty_type\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Salt Qty Type\"\n                              onChange={this.handleInput}\n                              data-index={index}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"col-lg-3\">\n                          <label htmlFor=\"email_address\">Description</label>\n                          <div className=\"form-line\">\n                            <input\n                              type=\"text\"\n                              id=\"description\"\n                              name=\"description\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Description\"\n                              onChange={this.handleInput}\n                              data-index={index}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary m-t-15 waves-effect btn-block\"\n                      disabled={this.state.btnMessage == 0 ? false : true}\n                    >\n                      {this.state.btnMessage == 0\n                        ? \"Add Medicine\"\n                        : \"Adding Medicine Please Wait..\"}\n                    </button>\n                    <br />\n                    {this.state.errorRes == false &&\n                    this.state.sendData == true ? (\n                      <div className=\"alert alert-success\">\n                        <strong>Success!</strong> {this.state.errorMessage}.\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                    {this.state.errorRes == true &&\n                    this.state.sendData == true ? (\n                      <div className=\"alert alert-danger\">\n                        <strong>Failed!</strong>\n                        {this.state.errorMessage}.\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default MedicineAddComponent;","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/MedicineManageComponent.js",["185","186","187","188","189","190","191","192","193","194","195","196"],"import React from \"react\";\nimport AuthHandler from \"../utils/AuthHandler\";\nimport APIHandler from \"../utils/ApiHandler\";\nimport { Link } from \"react-router-dom\";\n\nclass MedicineManageComponent extends React.Component {\n    constructor(props) {\n      super(props);\n      this.formSubmit = this.formSubmit.bind(this);\n    }\n    state = {\n      errorRes: false,\n      errorMessage: \"\",\n      btnMessage: 0,\n      sendData: false,\n      companylist: [],\n      medicinedetails: [],\n      medicineDataList: [],\n      dataLoaded: false,\n      name: \"\",\n      medical_typ: \"\",\n      buy_price: \"\",\n      sell_price: \"\",\n      c_gst: \"\",\n      s_gst: \"\",\n      batch_no: \"\",\n      shelf_no: \"\",\n      expire_date: \"\",\n      mfg_date: \"\",\n      company_id: \"\",\n      description1: \"\",\n      in_stock_total: \"\",\n      qty_in_strip: \"\",\n      total_salt_list: 0,\n      medicine_id: 0,\n    };\n\n    async formSubmit(event) {\n      event.preventDefault();\n      this.setState({ btnMessage: 1 });\n      var apiHandler = new APIHandler();\n      var response = await apiHandler.editMedicineData(\n        event.target.name.value,\n        event.target.medical_typ.value,\n        event.target.buy_price.value,\n        event.target.sell_price.value,\n        event.target.c_gst.value,\n        event.target.s_gst.value,\n        event.target.batch_no.value,\n        event.target.shelf_no.value,\n        event.target.expire_date.value,\n        event.target.mfg_date.value,\n        event.target.company_id.value,\n        event.target.description1.value,\n        event.target.in_stock_total.value,\n        event.target.qty_in_strip.value,\n        this.state.medicinedetails,\n        this.state.medicine_id\n      );\n      console.log(response);\n      this.setState({ btnMessage: 0 });\n      this.setState({ errorRes: response.data.error });\n      this.setState({ errorMessage: response.data.message });\n      this.setState({ sendData: true });\n    }\n  \n    componentDidMount() {\n        this.LoadInitialData();\n      }\n    \n      async LoadInitialData() {\n        var apihandler = new APIHandler();\n        var companydata = await apihandler.fetchCompanyOnly();\n        var medicinedata = await apihandler.fetchAllMedicine();\n        this.setState({ companylist: companydata.data });\n        this.setState({ medicineDataList: medicinedata.data.data });\n        this.setState({ dataLoaded: true });\n      }\n\n      RemoveItems = () => {\n        if (this.state.medicinedetails.length != this.state.total_salt_list) {\n          this.state.medicinedetails.pop(this.state.medicinedetails.length - 1);\n        }\n        this.setState({});\n      };\n    \n      handleInput = (event) => {\n        var keyname = event.target.name;\n        var value = event.target.value;\n        var index = event.target.getAttribute(\"data-index\");\n        this.state.medicinedetails[index][keyname] = value;\n        this.setState({});\n        console.log(this.state.medicinedetails);\n      };\n    \n      AddItem = () => {\n        var item = {\n          salt_name: \"\",\n          salt_qty: \"\",\n          salt_qty_type: \"\",\n          description: \"\",\n          id: 0,\n        };\n    \n        this.state.medicinedetails.push(item);\n        this.setState({});\n      };\n  \n      viewmedicineDetails = (index) => {\n        console.log(this.state.medicineDataList[index]);\n        this.setState({ medicine_id: this.state.medicineDataList[index].id });\n        this.setState({ name: this.state.medicineDataList[index].name });\n        this.setState({\n          medical_typ: this.state.medicineDataList[index].medical_typ,\n        });\n        this.setState({ buy_price: this.state.medicineDataList[index].buy_price });\n        this.setState({\n          sell_price: this.state.medicineDataList[index].sell_price,\n        });\n        this.setState({ c_gst: this.state.medicineDataList[index].c_gst });\n        this.setState({ s_gst: this.state.medicineDataList[index].s_gst });\n        this.setState({ batch_no: this.state.medicineDataList[index].batch_no });\n        this.setState({ shelf_no: this.state.medicineDataList[index].shelf_no });\n        this.setState({\n          expire_date: this.state.medicineDataList[index].expire_date,\n        });\n        this.setState({ mfg_date: this.state.medicineDataList[index].mfg_date });\n        this.setState({\n          company_id: this.state.medicineDataList[index].company_id,\n        });\n        this.setState({\n          description1: this.state.medicineDataList[index].description,\n        });\n        this.setState({\n          in_stock_total: this.state.medicineDataList[index].in_stock_total,\n        });\n        this.setState({\n          qty_in_strip: this.state.medicineDataList[index].qty_in_strip,\n        });\n        this.setState({\n          total_salt_list: this.state.medicineDataList[index].medicine_details\n            .length,\n        });\n        this.setState({\n          medicinedetails: this.state.medicineDataList[index].medicine_details,\n        });\n      };\n  \n    \n    \n  \n    \n\n  render() {\n    return (\n      <section className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"block-header\">\n            <h2>Manage Medicine</h2>\n          </div>\n\n          <div className=\"row clearfix\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div className=\"card\">\n                <div className=\"header\">\n                  {this.state.dataLoaded == false ? (\n                    <div className=\"text-center\">\n                      <div className=\"preloader pl-size-xl\">\n                        <div className=\"spinner-layer\">\n                          <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                          </div>\n                          <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  <h2>All Medicine</h2>\n                </div>\n                <div className=\"body table-responsive\">\n                  <table className=\"table table-hover\">\n                    <thead>\n                      <tr>\n                        <th>#ID</th>\n                        <th>NAME</th>\n                        <th>Medical Type</th>\n                        <th>Buy Price</th>\n                        <th>Sell Price</th>\n                        <th>Batch No</th>\n                        <th>Shelf No</th>\n                        <th>Expire Date</th>\n                        <th>Mfg Date</th>\n                        <th>In Stock</th>\n                        <th>Company</th>\n                        <th>Added On</th>\n                        <th>Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.medicineDataList.map((medicine, index) => (\n                        <tr key={medicine.id}>\n                          <td>{medicine.id}</td>\n                          <td>{medicine.name}</td>\n                          <td>{medicine.medical_typ}</td>\n                          <td>{medicine.buy_price}</td>\n                          <td>{medicine.sell_price}</td>\n                          <td>{medicine.batch_no}</td>\n                          <td>{medicine.shelf_no}</td>\n                          <td>{medicine.expire_date}</td>\n                          <td>{medicine.mfg_date}</td>\n                          <td>{medicine.in_stock_total}</td>\n                          <td>{medicine.company.name}</td>\n                          <td>\n                            {new Date(medicine.added_on).toLocaleString()}\n                          </td>\n                          <td>\n                            <button\n                              className=\"btn btn-block btn-warning\"\n                              onClick={() => this.viewmedicineDetails(index)}\n                            >\n                              View\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row clearfix\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div className=\"card\">\n                <div className=\"header\">\n                  <h2>Manage Medicine</h2>\n                </div>\n                <div className=\"body\">\n                  <form onSubmit={this.formSubmit}>\n                    <label htmlFor=\"email_address\">Name</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"name\"\n                          name=\"name\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Name\"\n                          defaultValue={this.state.name}\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Medicine Type</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"medical_typ\"\n                          name=\"medical_typ\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Medicine Type\"\n                          defaultValue={this.state.medical_typ}\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Buy Price</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"buy_price\"\n                          name=\"buy_price\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Buy Price\"\n                          defaultValue={this.state.buy_price}\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Sell Price</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"sell_price\"\n                          name=\"sell_price\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Sell Price\"\n                          defaultValue={this.state.sell_price}\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">C GST</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"c_gst\"\n                          name=\"c_gst\"\n                          className=\"form-control\"\n                          placeholder=\"Enter C-GST\"\n                          defaultValue={this.state.c_gst}\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">S GST</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"s_gst\"\n                          name=\"s_gst\"\n                          className=\"form-control\"\n                          placeholder=\"Enter S-GST\"\n                          defaultValue={this.state.s_gst}\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Batch No.</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"batch_no\"\n                          name=\"batch_no\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Batch No\"\n                          defaultValue={this.state.batch_no}\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Shelf No.</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"shelf_no\"\n                          name=\"shelf_no\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Shelf No\"\n                          defaultValue={this.state.shelf_no}\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Expire Date</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"date\"\n                          id=\"expire_date\"\n                          name=\"expire_date\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Expire Date\"\n                          defaultValue={this.state.expire_date}\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Mfg Date</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"date\"\n                          id=\"mfg_date\"\n                          name=\"mfg_date\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Mfg Date\"\n                          defaultValue={this.state.mfg_date}\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Description.</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"description1\"\n                          name=\"description1\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Description\"\n                          defaultValue={this.state.description1}\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">In Stock Total</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"in_stock_total\"\n                          name=\"in_stock_total\"\n                          className=\"form-control\"\n                          placeholder=\"Enter In Stock\"\n                          defaultValue={this.state.in_stock_total}\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Qty. in Strip</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"qty_in_strip\"\n                          name=\"qty_in_strip\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Description\"\n                          value={this.state.qty_in_strip}\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Company</label>\n                    <div className=\"form-group\">\n                      <select\n                        className=\"form-control show-tick\"\n                        name=\"company_id\"\n                        id=\"company_id\"\n                      >\n                        {this.state.companylist.map((item) => (\n                          <option\n                            key={item.id}\n                            value={item.id}\n                            selected={\n                              item.id == this.state.company_id ? true : false\n                            }\n                          >\n                            {item.name}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    <div className=\"form-group\">\n                      <div className=\"col-lg-6\">\n                        <button\n                          className=\"btn btn-block btn-success\"\n                          onClick={this.AddItem}\n                          type=\"button\"\n                        >\n                          Add Details\n                        </button>\n                      </div>\n                      <div className=\"col-lg-6\">\n                        <button\n                          className=\"btn btn-block btn-danger\"\n                          type=\"button\"\n                          onClick={this.RemoveItems}\n                        >\n                          Remove Details\n                        </button>\n                      </div>\n                    </div>\n                    {this.state.medicinedetails.map((item, index) => (\n                      <div className=\"form-group row\" key={index}>\n                        <div className=\"col-lg-3\">\n                          <label htmlFor=\"email_address\">Salt Name</label>\n                          <div className=\"form-line\">\n                            <input\n                              type=\"text\"\n                              id=\"salt_name\"\n                              name=\"salt_name\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Salt name\"\n                              onChange={this.handleInput}\n                              data-index={index}\n                              value={item.salt_name}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"col-lg-3\">\n                          <label htmlFor=\"email_address\">Salt Qty</label>\n                          <div className=\"form-line\">\n                            <input\n                              type=\"text\"\n                              id=\"salt_qty\"\n                              name=\"salt_qty\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Salt Qty\"\n                              onChange={this.handleInput}\n                              data-index={index}\n                              value={item.salt_qty}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"col-lg-3\">\n                          <label htmlFor=\"email_address\">Salt Qty Type</label>\n                          <div className=\"form-line\">\n                            <input\n                              type=\"text\"\n                              id=\"salt_qty_type\"\n                              name=\"salt_qty_type\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Salt Qty Type\"\n                              onChange={this.handleInput}\n                              data-index={index}\n                              value={item.salt_qty_type}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"col-lg-3\">\n                          <label htmlFor=\"email_address\">Description</label>\n                          <div className=\"form-line\">\n                            <input\n                              type=\"text\"\n                              id=\"description\"\n                              name=\"description\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Description\"\n                              onChange={this.handleInput}\n                              data-index={index}\n                              value={item.description}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary m-t-15 waves-effect btn-block\"\n                      disabled={this.state.btnMessage == 0 ? false : true}\n                    >\n                      {this.state.btnMessage == 0\n                        ? \"Edit Medicine\"\n                        : \"Updating Medicine Please Wait..\"}\n                    </button>\n                    <br />\n                    {this.state.errorRes == false &&\n                    this.state.sendData == true ? (\n                      <div className=\"alert alert-success\">\n                        <strong>Success!</strong> {this.state.errorMessage}.\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                    {this.state.errorRes == true &&\n                    this.state.sendData == true ? (\n                      <div className=\"alert alert-danger\">\n                        <strong>Failed!</strong>\n                        {this.state.errorMessage}.\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default MedicineManageComponent;","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/CompanyAccountComponent.js",["197","198","199","200","201","202","203","204","205"],"import React from \"react\";\nimport AuthHandler from \"../utils/AuthHandler\";\nimport APIHandler from \"../utils/ApiHandler\";\n\nclass CompanyAccountComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formSubmit = this.formSubmit.bind(this);\n  }\n  state = {\n    errorRes: false,\n    errorMessage: \"\",\n    btnMessage: 0,\n    sendData: false,\n    companyAccountdata: [],\n    dataLoaded: false,\n    companylist: [],\n  };\n\n  async formSubmit(event) {\n    event.preventDefault();\n    this.setState({ btnMessage: 1 });\n\n    var apiHandler = new APIHandler();\n    var response = await apiHandler.saveCompanyTransactionData(\n      event.target.company_id.value,\n      event.target.transaction_type.value,\n      event.target.transaction_amt.value,\n      event.target.transaction_date.value,\n      event.target.payment_mode.value\n    );\n    console.log(response);\n    this.setState({ btnMessage: 0 });\n    this.setState({ errorRes: response.data.error });\n    this.setState({ errorMessage: response.data.message });\n    this.setState({ sendData: true });\n    this.updateDataAgain();\n  }\n\n \n  //This Method Work When Our Page is Ready\n  componentDidMount() {\n    this.fetchCompanyAccountData();\n  }\n\n  async fetchCompanyAccountData() {\n    var apihandler = new APIHandler();\n    var companydata = await apihandler.fetchCompanyOnly();\n    this.updateDataAgain();\n    this.setState({ companylist: companydata.data });\n    this.setState({ dataLoaded: true });\n  }\n\n  async updateDataAgain() {\n    var apihandler = new APIHandler();\n    var companyAccountdata = await apihandler.fetchAllCompanyAccount();\n    this.setState({ companyAccountdata: companyAccountdata.data.data });\n  }\n\n\n  render() {\n    return (\n      <section className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"block-header\">\n            <h2>MANAGE COMPANY ACCOUNT</h2>\n          </div>\n          <div className=\"row clearfix\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div className=\"card\">\n                <div className=\"header\">\n                  <h2>Add Company Account Bill</h2>\n                </div>\n                <div className=\"body\">\n                  <form onSubmit={this.formSubmit}>\n                    <div className=\"row\">\n                      <div className=\"col-lg-4\">\n                        <label htmlFor=\"email_address\">Company</label>\n                        <div className=\"form-group\">\n                          <div className=\"form-line\">\n                            <select\n                              className=\"form-control show-tick\"\n                              name=\"company_id\"\n                              id=\"company_id\"\n                            >\n                              {this.state.companylist.map((item) => (\n                                <option key={item.id} value={item.id}>\n                                  {item.name}\n                                </option>\n                              ))}\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-lg-4\">\n                        <label htmlFor=\"email_address\">Transaction Type</label>\n                        <div className=\"form-group\">\n                          <div className=\"form-line\">\n                            <select\n                              id=\"transaction_type\"\n                              name=\"transaction_type\"\n                              className=\"form-control\"\n                            >\n                              <option value=\"1\">Debit</option>\n                              <option value=\"2\">Credit</option>\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-lg-4\">\n                        <label htmlFor=\"email_address\">Amount</label>\n                        <div className=\"form-group\">\n                          <div className=\"form-line\">\n                            <input\n                              type=\"text\"\n                              id=\"transaction_amt\"\n                              name=\"transaction_amt\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Amount\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-lg-4\">\n                        <label htmlFor=\"email_address\">Transaction Date</label>\n                        <div className=\"form-group\">\n                          <div className=\"form-line\">\n                            <input\n                              type=\"date\"\n                              id=\"transaction_date\"\n                              name=\"transaction_date\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Transaction Date\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-lg-4\">\n                        <label htmlFor=\"email_address\">Payment Mode</label>\n                        <div className=\"form-group\">\n                          <div className=\"form-line\">\n                            <input\n                              type=\"text\"\n                              id=\"payment_mode\"\n                              name=\"payment_mode\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Payement Mode\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <br />\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary m-t-15 waves-effect btn-block\"\n                      disabled={this.state.btnMessage == 0 ? false : true}\n                    >\n                      {this.state.btnMessage == 0\n                        ? \"Add Company Transaction\"\n                        : \"Adding Company Transaction Please Wait..\"}\n                    </button>\n                    <br />\n                    {this.state.errorRes == false &&\n                    this.state.sendData == true ? (\n                      <div className=\"alert alert-success\">\n                        <strong>Success!</strong> {this.state.errorMessage}.\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                    {this.state.errorRes == true &&\n                    this.state.sendData == true ? (\n                      <div className=\"alert alert-danger\">\n                        <strong>Failed!</strong>\n                        {this.state.errorMessage}.\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row clearfix\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div className=\"card\">\n                <div className=\"header\">\n                  {this.state.dataLoaded == false ? (\n                    <div className=\"text-center\">\n                      <div className=\"preloader pl-size-xl\">\n                        <div className=\"spinner-layer\">\n                          <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                          </div>\n                          <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  <h2>All Companies Account Transactions</h2>\n                </div>\n                <div className=\"body table-responsive\">\n                  <table className=\"table table-hover\">\n                    <thead>\n                      <tr>\n                        <th>#ID</th>\n                        <th>Company Name</th>\n                        <th>Company ID</th>\n                        <th>Transaction Type</th>\n                        <th>Amount</th>\n                        <th>Date</th>\n                        <th>Payment Mode</th>\n                        <th>Added On</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.companyAccountdata.map((companyaccount) => (\n                        <tr key={companyaccount.id}>\n                          <td>{companyaccount.id}</td>\n                          <td>{companyaccount.company.name}</td>\n                          <td>{companyaccount.company.id}</td>\n                          <td>\n                            {companyaccount.transaction_type == 1\n                              ? \"Debit\"\n                              : \"Credit\"}\n                          </td>\n                          <td>{companyaccount.transaction_amt}</td>\n                          <td>{companyaccount.transaction_date}</td>\n                          <td>{companyaccount.payment_mode}</td>\n                          <td>\n                            {new Date(companyaccount.added_on).toLocaleString()}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default CompanyAccountComponent;","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/EmployeeComponent.js",["206","207","208","209","210","211","212","213"],"import React from \"react\";\nimport AuthHandler from \"../utils/AuthHandler\";\nimport APIHandler from \"../utils/ApiHandler\";\n\nclass EmployeeComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formSubmit = this.formSubmit.bind(this);\n  }\n  state = {\n    errorRes: false,\n    errorMessage: \"\",\n    btnMessage: 0,\n    sendData: false,\n    employeeList: [],\n    dataLoaded: false,\n  };\n\n  async formSubmit(event) {\n    event.preventDefault();\n    this.setState({ btnMessage: 1 });\n\n    var apiHandler = new APIHandler();\n    var response = await apiHandler.saveEmployeeData(\n      event.target.name.value,\n      event.target.joining_date.value,\n      event.target.phone.value,\n      event.target.address.value\n    );\n    console.log(response);\n    this.setState({ btnMessage: 0 });\n    this.setState({ errorRes: response.data.error });\n    this.setState({ errorMessage: response.data.message });\n    this.setState({ sendData: true });\n    this.updateDataAgain();\n  }\n\n  //This Method Work When Our Page is Ready\n  componentDidMount() {\n    this.fetchEmployeeData();\n  }\n\n  async fetchEmployeeData() {\n    this.updateDataAgain();\n  }\n\n  async updateDataAgain() {\n    var apihandler = new APIHandler();\n    var employeeDataList = await apihandler.fetchEmployee();\n    this.setState({ employeeList: employeeDataList.data.data });\n    this.setState({ dataLoaded: true });\n  }\n\n  ShowEmpDetails = (eid) => {\n    this.props.history.push(\"/employeedetails/\" + eid);\n  };\n\n  render() {\n    return (\n      <section className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"block-header\">\n            <h2>MANAGE Employee</h2>\n          </div>\n          <div className=\"row clearfix\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div className=\"card\">\n                <div className=\"header\">\n                  <h2>Add Employee</h2>\n                </div>\n                <div className=\"body\">\n                  <form onSubmit={this.formSubmit}>\n                    <div className=\"row\">\n                      <div className=\"col-lg-6\">\n                        <label htmlFor=\"email_address\">Name</label>\n                        <div className=\"form-group\">\n                          <div className=\"form-line\">\n                            <input\n                              type=\"text\"\n                              id=\"name\"\n                              name=\"name\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Name\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-lg-6\">\n                        <label htmlFor=\"email_address\">Joining Date</label>\n                        <div className=\"form-group\">\n                          <div className=\"form-line\">\n                            <input\n                              type=\"date\"\n                              id=\"joining_date\"\n                              name=\"joining_date\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Date\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-lg-6\">\n                        <label htmlFor=\"email_address\">Phone</label>\n                        <div className=\"form-group\">\n                          <div className=\"form-line\">\n                            <input\n                              type=\"text\"\n                              id=\"phone\"\n                              name=\"phone\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Phone\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-lg-6\">\n                        <label htmlFor=\"email_address\">Address</label>\n                        <div className=\"form-group\">\n                          <div className=\"form-line\">\n                            <input\n                              type=\"text\"\n                              id=\"address\"\n                              name=\"address\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Address\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <br />\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary m-t-15 waves-effect btn-block\"\n                      disabled={this.state.btnMessage == 0 ? false : true}\n                    >\n                      {this.state.btnMessage == 0\n                        ? \"Add Employee\"\n                        : \"Adding Employee Please Wait..\"}\n                    </button>\n                    <br />\n                    {this.state.errorRes == false &&\n                    this.state.sendData == true ? (\n                      <div className=\"alert alert-success\">\n                        <strong>Success!</strong> {this.state.errorMessage}.\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                    {this.state.errorRes == true &&\n                    this.state.sendData == true ? (\n                      <div className=\"alert alert-danger\">\n                        <strong>Failed!</strong>\n                        {this.state.errorMessage}.\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row clearfix\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div className=\"card\">\n                <div className=\"header\">\n                  {this.state.dataLoaded == false ? (\n                    <div className=\"text-center\">\n                      <div className=\"preloader pl-size-xl\">\n                        <div className=\"spinner-layer\">\n                          <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                          </div>\n                          <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  <h2>All Employee Data</h2>\n                </div>\n                <div className=\"body table-responsive\">\n                  <table className=\"table table-hover\">\n                    <thead>\n                      <tr>\n                        <th>#ID</th>\n                        <th>Name</th>\n                        <th>Joining Date</th>\n                        <th>Phone</th>\n                        <th>Address</th>\n                        <th>Added On</th>\n                        <th>Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.employeeList.map((employee) => (\n                        <tr key={employee.id}>\n                          <td>{employee.id}</td>\n                          <td>{employee.name}</td>\n                          <td>{employee.joining_date}</td>\n                          <td>{employee.phone}</td>\n                          <td>{employee.address}</td>\n                          <td>\n                            {new Date(employee.added_on).toLocaleString()}\n                          </td>\n                          <td>\n                            <button\n                              className=\"btn btn-primary\"\n                              onClick={() => this.ShowEmpDetails(employee.id)}\n                            >\n                              VIEW\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default EmployeeComponent;","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/EmployeeDetailsComponent.js",["214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234"],"import React from \"react\";\nimport AuthHandler from \"../utils/AuthHandler\";\nimport APIHandler from \"../utils/ApiHandler\";\n\nclass EmployeeDetailsComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formSubmit = this.formSubmit.bind(this);\n    this.formSubmitSalary = this.formSubmitSalary.bind(this);\n    this.formSubmitBank = this.formSubmitBank.bind(this);\n  }\n  state = {\n    errorRes: false,\n    errorResSalary: false,\n    errorResBank: false,\n    errorMessage: \"\",\n    errorMessageSalary: \"\",\n    errorMessageBank: \"\",\n    btnMessage: 0,\n    btnMessageSalary: 0,\n    btnMessageBank: 0,\n    sendData: false,\n    sendDataSalary: false,\n    sendDataBank: false,\n    employeeList: [],\n    dataLoaded: false,\n    address: \"\",\n    name: \"\",\n    phone: \"\",\n    joining_date: \"\",\n    employeeSalaryList: [],\n    employeebankList: [],\n  };\n\n  async formSubmit(event) {\n    event.preventDefault();\n    this.setState({ btnMessage: 1 });\n\n    var apiHandler = new APIHandler();\n    var response = await apiHandler.editEmployeeData(\n      event.target.name.value,\n      event.target.joining_date.value,\n      event.target.phone.value,\n      event.target.address.value,\n      this.props.match.params.id\n    );\n    console.log(response);\n    this.setState({ btnMessage: 0 });\n    this.setState({ errorRes: response.data.error });\n    this.setState({ errorMessage: response.data.message });\n    this.setState({ sendData: true });\n    this.updateDataAgain();\n  }\n\n  //This Method Work When Our Page is Ready\n  componentDidMount() {\n    this.fetchEmployeeDataByID();\n  }\n\n  async fetchEmployeeDataByID() {\n    this.updateDataAgain();\n  }\n\n\n\n  async updateDataAgain() {\n    var apihandler = new APIHandler();\n    var employeeData = await apihandler.fetchEmployeeById(\n      this.props.match.params.id\n    );\n\n    var employeeSalary = await apihandler.fetchSalaryEmployee(\n      this.props.match.params.id\n    );\n\n    var employeeBank = await apihandler.fetchBankEmployee(\n      this.props.match.params.id\n    );\n\n    console.log(employeeSalary);\n    this.setState({ name: employeeData.data.data.name });\n    this.setState({ phone: employeeData.data.data.phone });\n    this.setState({ joining_date: employeeData.data.data.joining_date });\n    this.setState({ address: employeeData.data.data.address });\n    this.setState({ employeeSalaryList: employeeSalary.data });\n    this.setState({ employeebankList: employeeBank.data });\n    //this.setState({ employeeList: employeeDataList.data.data });\n    this.setState({ dataLoaded: true });\n  }\n\n  async formSubmitSalary(event) {\n    event.preventDefault();\n    this.setState({ btnMessageSalary: 1 });\n\n    var apiHandler = new APIHandler();\n    var response = await apiHandler.AddEmployeeSalaryData(\n      event.target.salary_date.value,\n      event.target.salary_amount.value,\n      this.props.match.params.id\n    );\n    console.log(response);\n    this.setState({ btnMessageSalary: 0 });\n    this.setState({ errorResSalary: response.data.error });\n    this.setState({ errorMessageSalary: response.data.message });\n    this.setState({ sendDataSalary: true });\n    this.updateDataAgain();\n  }\n\n  async formSubmitBank(event) {\n    event.preventDefault();\n    this.setState({ btnMessageBank: 1 });\n\n    var apiHandler = new APIHandler();\n    var response = await apiHandler.AddEmployeeBankData(\n      event.target.bank_account_no.value,\n      event.target.ifsc_no.value,\n      this.props.match.params.id\n    );\n    console.log(response);\n    this.setState({ btnMessageBank: 0 });\n    this.setState({ errorResBank: response.data.error });\n    this.setState({ errorMessageBank: response.data.message });\n    this.setState({ sendDataBank: true });\n    this.updateDataAgain();\n  }\n\n  render() {\n    return (\n      <section className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"block-header\">\n            <h2>Edit Employee #{this.props.match.params.id}</h2>\n          </div>\n          <div className=\"row clearfix\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div className=\"card\">\n                <div className=\"header\">\n                  <h2>Edit Employee</h2>\n                </div>\n                <div className=\"body\">\n                  <form onSubmit={this.formSubmit}>\n                    <div className=\"row\">\n                      <div className=\"col-lg-6\">\n                        <label htmlFor=\"email_address\">Name</label>\n                        <div className=\"form-group\">\n                          <div className=\"form-line\">\n                            <input\n                              type=\"text\"\n                              id=\"name\"\n                              name=\"name\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Name\"\n                              defaultValue={this.state.name}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-lg-6\">\n                        <label htmlFor=\"email_address\">Joining Date</label>\n                        <div className=\"form-group\">\n                          <div className=\"form-line\">\n                            <input\n                              type=\"date\"\n                              id=\"joining_date\"\n                              name=\"joining_date\"\n                              className=\"form-control\"\n                              defaultValue={this.state.joining_date}\n                              placeholder=\"Enter Date\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-lg-6\">\n                        <label htmlFor=\"email_address\">Phone</label>\n                        <div className=\"form-group\">\n                          <div className=\"form-line\">\n                            <input\n                              type=\"text\"\n                              id=\"phone\"\n                              name=\"phone\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Phone\"\n                              defaultValue={this.state.phone}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-lg-6\">\n                        <label htmlFor=\"email_address\">Address</label>\n                        <div className=\"form-group\">\n                          <div className=\"form-line\">\n                            <input\n                              type=\"text\"\n                              id=\"address\"\n                              name=\"address\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Address\"\n                              defaultValue={this.state.address}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <br />\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary m-t-15 waves-effect btn-block\"\n                      disabled={this.state.btnMessage == 0 ? false : true}\n                    >\n                      {this.state.btnMessage == 0\n                        ? \"Edit Employee\"\n                        : \"Editing Employee Please Wait..\"}\n                    </button>\n                    <br />\n                    {this.state.errorRes == false &&\n                    this.state.sendData == true ? (\n                      <div className=\"alert alert-success\">\n                        <strong>Success!</strong> {this.state.errorMessage}.\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                    {this.state.errorRes == true &&\n                    this.state.sendData == true ? (\n                      <div className=\"alert alert-danger\">\n                        <strong>Failed!</strong>\n                        {this.state.errorMessage}.\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row clearfix\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div className=\"card\">\n                <div className=\"header\">\n                  <h2>ADD Employee Salary</h2>\n                </div>\n                <div className=\"body\">\n                  <form onSubmit={this.formSubmitSalary}>\n                    <div className=\"row\">\n                      <div className=\"col-lg-6\">\n                        <label htmlFor=\"email_address\">Salary Date</label>\n                        <div className=\"form-group\">\n                          <div className=\"form-line\">\n                            <input\n                              type=\"date\"\n                              id=\"salary_date\"\n                              name=\"salary_date\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Salary Date\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-lg-6\">\n                        <label htmlFor=\"email_address\">Salary Amount</label>\n                        <div className=\"form-group\">\n                          <div className=\"form-line\">\n                            <input\n                              type=\"text\"\n                              id=\"salary_amount\"\n                              name=\"salary_amount\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Salary Amount\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary m-t-15 waves-effect btn-block\"\n                      disabled={this.state.btnMessageSalary == 0 ? false : true}\n                    >\n                      {this.state.btnMessageSalary == 0\n                        ? \"Add Employee Salary\"\n                        : \"Adding Employee Salary Please Wait..\"}\n                    </button>\n                    <br />\n                    {this.state.errorResSalary == false &&\n                    this.state.sendDataSalary == true ? (\n                      <div className=\"alert alert-success\">\n                        <strong>Success!</strong>{\" \"}\n                        {this.state.errorMessageSalary}.\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                    {this.state.errorResSalary == true &&\n                    this.state.sendDataSalary == true ? (\n                      <div className=\"alert alert-danger\">\n                        <strong>Failed!</strong>\n                        {this.state.errorMessageSalary}.\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row clearfix\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div className=\"card\">\n                <div className=\"header\">\n                  {this.state.dataLoaded == false ? (\n                    <div className=\"text-center\">\n                      <div className=\"preloader pl-size-xl\">\n                        <div className=\"spinner-layer\">\n                          <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                          </div>\n                          <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  <h2>Employee Salary</h2>\n                </div>\n                <div className=\"body table-responsive\">\n                  <table className=\"table table-hover\">\n                    <thead>\n                      <tr>\n                        <th>#ID</th>\n                        <th>Salary Date</th>\n                        <th>Salary Amount</th>\n                        <th>Added On</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.employeeSalaryList.map((salary) => (\n                        <tr key={salary.id}>\n                          <td>{salary.id}</td>\n                          <td>{salary.salary_date}</td>\n                          <td>{salary.salary_amount}</td>\n                          <td>{new Date(salary.added_on).toLocaleString()}</td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"row clearfix\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div className=\"card\">\n                <div className=\"header\">\n                  <h2>ADD Employee Bank</h2>\n                </div>\n                <div className=\"body\">\n                  <form onSubmit={this.formSubmitBank}>\n                    <div className=\"row\">\n                      <div className=\"col-lg-6\">\n                        <label htmlFor=\"email_address\">Account No.</label>\n                        <div className=\"form-group\">\n                          <div className=\"form-line\">\n                            <input\n                              type=\"text\"\n                              id=\"bank_account_no\"\n                              name=\"bank_account_no\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Account No.\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-lg-6\">\n                        <label htmlFor=\"email_address\">IFSC Code</label>\n                        <div className=\"form-group\">\n                          <div className=\"form-line\">\n                            <input\n                              type=\"text\"\n                              id=\"ifsc_no\"\n                              name=\"ifsc_no\"\n                              className=\"form-control\"\n                              placeholder=\"Enter IFSC Code\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary m-t-15 waves-effect btn-block\"\n                      disabled={this.state.btnMessageBank == 0 ? false : true}\n                    >\n                      {this.state.btnMessageBank == 0\n                        ? \"Add Employee Bank\"\n                        : \"Adding Employee Bank Please Wait..\"}\n                    </button>\n                    <br />\n                    {this.state.errorResBank == false &&\n                    this.state.sendDataBank == true ? (\n                      <div className=\"alert alert-success\">\n                        <strong>Success!</strong> {this.state.errorMessageBank}.\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                    {this.state.errorResBank == true &&\n                    this.state.sendDataBank == true ? (\n                      <div className=\"alert alert-danger\">\n                        <strong>Failed!</strong>\n                        {this.state.errorMessageBank}.\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row clearfix\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div className=\"card\">\n                <div className=\"header\">\n                  {this.state.dataLoaded == false ? (\n                    <div className=\"text-center\">\n                      <div className=\"preloader pl-size-xl\">\n                        <div className=\"spinner-layer\">\n                          <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                          </div>\n                          <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  <h2>Employee Bank</h2>\n                </div>\n                <div className=\"body table-responsive\">\n                  <table className=\"table table-hover\">\n                    <thead>\n                      <tr>\n                        <th>#ID</th>\n                        <th>Account No</th>\n                        <th>IFSC Code</th>\n                        <th>Added On</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.employeebankList.map((bankdetails) => (\n                        <tr key={bankdetails.id}>\n                          <td>{bankdetails.id}</td>\n                          <td>{bankdetails.bank_account_no}</td>\n                          <td>{bankdetails.ifsc_no}</td>\n                          <td>\n                            {new Date(bankdetails.added_on).toLocaleString()}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default EmployeeDetailsComponent;","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/BillGenarateComponent.js",["235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254"],"import React from \"react\";\nimport AuthHandler from \"../utils/AuthHandler\";\nimport APIHandler from \"../utils/ApiHandler\";\nimport { Link } from \"react-router-dom\";\nimport AutoCompleteMedicine from \"../components/AutoCompleteMedicine\";\n\nclass BillGenerateComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formSubmit = this.formSubmit.bind(this);\n  }\n  state = {\n    errorRes: false,\n    errorMessage: \"\",\n    btnMessage: 0,\n    sendData: false,\n    medicineDetails: [\n      {\n        sr_no: 1,\n        id: 0,\n        medicine_name: \"\",\n        qty: \"\",\n        qty_type: \"\",\n        unit_price: \"\",\n        c_gst: \"\",\n        s_gst: \"\",\n        amount: \"\",\n      },\n    ],\n    currentSrno: 1,\n  };\n\n  async formSubmit(event) {\n    event.preventDefault();\n    console.log(this.state.medicineDetails);\n    console.log(event.target.customer_name.value);\n    console.log(event.target.address.value);\n    console.log(event.target.phone.value);\n\n    this.setState({ btnMessage: 1 });\n\n    var customer_name = event.target.customer_name.value;\n    var address = event.target.address.value;\n    var phone = event.target.phone.value;\n\n    var apiHandler = new APIHandler();\n    var response = await apiHandler.generateBill(\n      event.target.customer_name.value,\n      event.target.address.value,\n      event.target.phone.value,\n      this.state.medicineDetails\n    );\n    console.log(response);\n    this.setState({ btnMessage: 0 });\n    this.setState({ errorRes: response.data.error });\n    this.setState({ errorMessage: response.data.message });\n    this.setState({ sendData: true });\n\n    this.billGeneratePrint(\n      customer_name,\n      address,\n      phone,\n      this.state.medicineDetails\n    );\n  }\n\n  billGeneratePrint(customer_name, address, phone, medicineDetails) {\n    var billDetails =\n      \"<style> table{ width:100%;border-collapse:collapse; } td{ padding:5px } th { padding:5px } </style><div>\";\n    billDetails += \"<table border='1'>\";\n    billDetails += \"<tr>\";\n    billDetails += \"<td style='text-align:center' colspan='7'>\";\n    billDetails += \"Bill For Customer\";\n    billDetails += \"</td>\";\n    billDetails += \"</tr>\";\n    billDetails += \"<tr>\";\n    billDetails += \"<td colspan='2'>\";\n    billDetails += \"Name : \" + customer_name;\n    billDetails += \"</td>\";\n    billDetails += \"<td colspan='3'>\";\n    billDetails += \"Address : \" + address;\n    billDetails += \"</td>\";\n    billDetails += \"<td colspan='2'>\";\n    billDetails += \"Phone : \" + phone;\n    billDetails += \"</td>\";\n    billDetails += \"</tr>\";\n    billDetails += \"<tr>\";\n    billDetails += \"<th>\";\n    billDetails += \"SR NO .\";\n    billDetails += \"</th>\";\n    billDetails += \"<th>\";\n    billDetails += \"Name .\";\n    billDetails += \"</th>\";\n    billDetails += \"<th>\";\n    billDetails += \"QTY .\";\n    billDetails += \"</th>\";\n    billDetails += \"<th>\";\n    billDetails += \"QTY TYPE .\";\n    billDetails += \"</th>\";\n    billDetails += \"<th>\";\n    billDetails += \"UNIT PRICE .\";\n    billDetails += \"</th>\";\n    billDetails += \"<th>\";\n    billDetails += \"GST .\";\n    billDetails += \"</th>\";\n    billDetails += \"<th>\";\n    billDetails += \"AMOUNT .\";\n    billDetails += \"</th>\";\n    billDetails += \"</tr>\";\n    var totalamt = 0;\n\n    for (var i = 0; i < medicineDetails.length; i++) {\n      billDetails += \"<tr>\";\n      billDetails += \"<td>\";\n      billDetails += \"\" + medicineDetails[i].sr_no;\n      billDetails += \"</td>\";\n      billDetails += \"<td>\";\n      billDetails += \"\" + medicineDetails[i].medicine_name;\n      billDetails += \"</td>\";\n      billDetails += \"<td>\";\n      billDetails += \"\" + medicineDetails[i].qty;\n      billDetails += \"</td>\";\n      billDetails += \"<td>\";\n      billDetails += \"\" + medicineDetails[i].qty_type;\n      billDetails += \"</td>\";\n      billDetails += \"<td>\";\n      billDetails += \"\" + medicineDetails[i].unit_price;\n      billDetails += \"</td>\";\n      billDetails += \"<td>\";\n      billDetails +=\n        \"\" + medicineDetails[i].c_gst + \" \" + medicineDetails[i].s_gst;\n      billDetails += \"</td>\";\n      billDetails += \"<td>\";\n      billDetails += \"\" + medicineDetails[i].amount;\n      billDetails += \"</td>\";\n      billDetails += \"</tr>\";\n\n      totalamt += parseInt(medicineDetails[i].amount);\n    }\n\n    billDetails += \"<tr>\";\n    billDetails +=\n      \"<td colspan='6' style='text-align:right;font-weight:bold;background:green;color:white'>\";\n    billDetails += \"Total : \" + totalamt;\n    billDetails += \"<td>\";\n    billDetails += \"</tr>\";\n    billDetails += \"</table>\";\n    billDetails += \"</div>\";\n\n    var mywindow = window.open(\n      \"\",\n      \"Bill Print\",\n      \"height=650&width=900&top=100&left=100\"\n    );\n\n    mywindow.document.write(billDetails);\n    mywindow.print();\n  }\n\n  AddMedicineDetails = () => {\n    this.state.currentSrno = this.state.currentSrno + 1;\n    var srno = this.state.currentSrno;\n    this.state.medicineDetails.push({\n      sr_no: srno,\n      medicine_name: \"\",\n      qty: \"\",\n      qty_type: \"\",\n      unit_price: \"\",\n      c_gst: \"\",\n      s_gst: \"\",\n      amount: \"\",\n    });\n    this.setState({});\n  };\n\n  RemoveMedicineDetails = () => {\n    this.state.currentSrno = this.state.currentSrno - 1;\n    if (this.state.medicineDetails.length > 1) {\n      this.state.medicineDetails.pop();\n    }\n    this.setState({});\n  };\n\n  showDataInInputs = (index, item) => {\n    console.log(index);\n    console.log(item);\n    this.state.medicineDetails[index].id = item.id;\n    this.state.medicineDetails[index].qty = 1;\n    this.state.medicineDetails[index].qty_type = \"Pieces\";\n    this.state.medicineDetails[index].unit_price = item.sell_price;\n    this.state.medicineDetails[index].c_gst = item.c_gst;\n    this.state.medicineDetails[index].s_gst = item.s_gst;\n    this.state.medicineDetails[index].medicine_name = item.name;\n    this.state.medicineDetails[index].amount =\n      parseInt(item.sell_price) + parseInt(item.c_gst) + parseInt(item.s_gst);\n    this.setState({});\n  };\n\n  qtyChangeUpdate = (event) => {\n    var value = event.target.value;\n    var index = event.target.dataset.index;\n\n    this.state.medicineDetails[index].amount =\n      (parseInt(this.state.medicineDetails[index].unit_price) +\n        parseInt(this.state.medicineDetails[index].c_gst) +\n        parseInt(this.state.medicineDetails[index].s_gst)) *\n      value;\n    this.state.medicineDetails[index].qty = value;\n    this.setState({});\n  };\n\n  render() {\n    return (\n      <section className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"block-header\">\n            <h2>Generate Bill</h2>\n          </div>\n          <div className=\"row clearfix\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div className=\"card\">\n                <div className=\"header\">\n                  <h2>Generate Bill for Customers</h2>\n                </div>\n                <div className=\"body\">\n                  <form onSubmit={this.formSubmit}>\n                    <div className=\"row\">\n                      <div className=\"col-lg-6\">\n                        <label htmlFor=\"email_address\">Customer Name :</label>\n                        <div className=\"form-group\">\n                          <div className=\"form-line\">\n                            <input\n                              type=\"text\"\n                              id=\"customer_name\"\n                              name=\"customer_name\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Customer Name \"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-lg-6\">\n                        <label htmlFor=\"email_address\">Address : </label>\n                        <div className=\"form-group\">\n                          <div className=\"form-line\">\n                            <input\n                              type=\"text\"\n                              id=\"address\"\n                              name=\"address\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Address.\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-lg-6\">\n                        <label htmlFor=\"email_address\">Phone :</label>\n                        <div className=\"form-group\">\n                          <div className=\"form-line\">\n                            <input\n                              type=\"text\"\n                              id=\"phone\"\n                              name=\"phone\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Customer Phone \"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <br />\n                    <h4>Medicine Details</h4>\n                    {this.state.medicineDetails.map((item, index) => (\n                      <div className=\"row\" key={index}>\n                        <div className=\"col-lg-2\">\n                          <label htmlFor=\"email_address\">SR No : </label>\n                          <div className=\"form-group\">\n                            <div className=\"form-line\">\n                              <input\n                                type=\"text\"\n                                id=\"sr_no\"\n                                name=\"sr_no\"\n                                className=\"form-control\"\n                                placeholder=\"Enter SR No.\"\n                                defaultValue={index + 1}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-lg-2\">\n                          <label htmlFor=\"email_address\">\n                            Medicine Name :{\" \"}\n                          </label>\n                          <div className=\"form-group\">\n                            <div className=\"form-line\">\n                              <AutoCompleteMedicine\n                                itemPostion={index}\n                                showDataInInputs={this.showDataInInputs}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-lg-2\">\n                          <label htmlFor=\"email_address\">Qty : </label>\n                          <div className=\"form-group\">\n                            <div className=\"form-line\">\n                              <input\n                                type=\"text\"\n                                id=\"qty\"\n                                name=\"qty\"\n                                className=\"form-control\"\n                                placeholder=\"Enter Quantity.\"\n                                defaultValue={item.qty}\n                                data-index={index}\n                                onChange={this.qtyChangeUpdate}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-lg-2\">\n                          <label htmlFor=\"email_address\">Qty Type : </label>\n                          <div className=\"form-group\">\n                            <div className=\"form-line\">\n                              <input\n                                type=\"text\"\n                                id=\"qty_type\"\n                                name=\"qty_type\"\n                                className=\"form-control\"\n                                placeholder=\"Enter Qty Type.\"\n                                defaultValue={item.qty_type}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-lg-2\">\n                          <label htmlFor=\"email_address\">Unit Price : </label>\n                          <div className=\"form-group\">\n                            <div className=\"form-line\">\n                              <input\n                                type=\"text\"\n                                id=\"unit_price\"\n                                name=\"unit_price\"\n                                className=\"form-control\"\n                                placeholder=\"Enter Unit Price.\"\n                                defaultValue={item.unit_price}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-lg-2\">\n                          <label htmlFor=\"email_address\">Amount : </label>\n                          <div className=\"form-group\">\n                            <div className=\"form-line\">\n                              <input\n                                type=\"text\"\n                                id=\"amount\"\n                                name=\"amount\"\n                                className=\"form-control\"\n                                placeholder=\"Enter Amount\"\n                                defaultValue={item.amount}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                    <div className=\"row\">\n                      <div className=\"col-lg-6\">\n                        <button\n                          onClick={this.AddMedicineDetails}\n                          className=\"btn btn-block btn-success\"\n                          type=\"button\"\n                        >\n                          ADD MEDICINE DETAILS\n                        </button>\n                      </div>\n                      <div className=\"col-lg-6\">\n                        <button\n                          onClick={this.RemoveMedicineDetails}\n                          className=\"btn btn-block btn-warning\"\n                          type=\"button\"\n                        >\n                          REMOVE MEDICINE DETAILS\n                        </button>\n                      </div>\n                    </div>\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary m-t-15 waves-effect btn-block\"\n                      disabled={this.state.btnMessage == 0 ? false : true}\n                    >\n                      {this.state.btnMessage == 0\n                        ? \"Generate Bill\"\n                        : \"Generating Bill Please Wait..\"}\n                    </button>\n                    <br />\n                    {this.state.errorRes == false &&\n                    this.state.sendData == true ? (\n                      <div className=\"alert alert-success\">\n                        <strong>Success!</strong> {this.state.errorMessage}.\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                    {this.state.errorRes == true &&\n                    this.state.sendData == true ? (\n                      <div className=\"alert alert-danger\">\n                        <strong>Failed!</strong>\n                        {this.state.errorMessage}.\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default BillGenerateComponent;","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/components/AutoCompleteMedicine.js",["255"],"import React from \"react\";\nimport APIHandler from \"../utils/ApiHandler\";\n\nclass AutoCompleteMedicine extends React.Component {\n  state = {\n    onFocus: false,\n    datalist: [],\n  };\n\n  constructor(props) {\n    super(props);\n    this.loadDataMedicine = this.loadDataMedicine.bind(this);\n    this.inputData = React.createRef();\n  }\n\n  onFocusChange = () => {\n    this.setState({ onFocus: true });\n  };\n  onBlurChange = () => {\n    this.setState({ onFocus: false });\n  };\n\n  async loadDataMedicine(event) {\n    var apiHandler = new APIHandler();\n    var dataresponse = await apiHandler.fetchMedicineByName(event.target.value);\n    this.setState({ datalist: dataresponse.data });\n  }\n\n  onShowItem = (item) => {\n    console.log(item);\n    this.inputData.current.value = item.name;\n    this.props.showDataInInputs(this.props.itemPostion, item);\n    this.onBlurChange();\n  };\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <input\n          type=\"text\"\n          id=\"medicine_name\"\n          name=\"medicine_name\"\n          className=\"form-control\"\n          placeholder=\"Enter Medicine Name\"\n          onFocus={this.onFocusChange}\n          autoComplete=\"off\"\n          onChange={this.loadDataMedicine}\n          ref={this.inputData}\n        />\n        {this.state.onFocus == true ? (\n          <div>\n            <ul\n              style={{\n                listStyle: \"none\",\n                margin: 0,\n                padding: 0,\n                border: \"1px solid lightgrey\",\n                boxShadow: \"1px 1px 1px lightgrey\",\n                position: \"absolute\",\n                width: \"100%\",\n                zIndex: 1,\n                background: \"white\",\n              }}\n            >\n              {this.state.datalist.map((item, index) => (\n                <li\n                  key={index}\n                  style={{ padding: 5, borderBottom: \"1px solid lightgrey\" }}\n                  onClick={() => this.onShowItem(item)}\n                >\n                  {item.name}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AutoCompleteMedicine;","/home/safwan/Documents/projects/python/Msms/msms/frontend/src/pages/CustomerRequestComponent.js",["256","257","258","259","260","261","262","263","264","265"],"import React from \"react\";\nimport AuthHandler from \"../utils/AuthHandler\";\nimport APIHandler from \"../utils/ApiHandler\";\n\nclass CustomerRequestComponent extends React.Component {\n    constructor(props) {\n      super(props);\n      this.formSubmit = this.formSubmit.bind(this);\n      this.completeCustomerRequestDetails = this.completeCustomerRequestDetails.bind(\n        this\n      );\n      this.formRef = React.createRef();\n    }\n    state = {\n      errorRes: false,\n      errorMessage: \"\",\n      btnMessage: 0,\n      sendData: false,\n      customerRequestDataList: [],\n      dataLoaded: false,\n    };\n  \n    async formSubmit(event) {\n      event.preventDefault();\n      this.setState({ btnMessage: 1 });\n  \n      var apiHandler = new APIHandler();\n      var response = await apiHandler.saveCustomerRequestData(\n        event.target.name.value,\n        event.target.phone.value,\n        event.target.medicine_details.value\n      );\n      console.log(response);\n      this.setState({ btnMessage: 0 });\n      this.setState({ errorRes: response.data.error });\n      this.setState({ errorMessage: response.data.message });\n      this.setState({ sendData: true });\n      this.fetchCustomerRequestData();\n      this.formRef.current.reset();\n    }\n  \n    //This Method Work When Our Page is Ready\n    componentDidMount() {\n      this.fetchCustomerRequestData();\n    }\n  \n    async fetchCustomerRequestData() {\n      var apihandler = new APIHandler();\n      var customerRequestData = await apihandler.fetchAllCustomerRequest();\n      console.log(customerRequestData);\n      this.setState({ customerRequestDataList: customerRequestData.data.data });\n      this.setState({ dataLoaded: true });\n    }\n\n    async completeCustomerRequestDetails(\n        customer_id,\n        name,\n        phone,\n        medicine_details\n      ) {\n        console.log(customer_id);\n        var apihandler = new APIHandler();\n        var customerRequestData = await apihandler.updateCustomerRequest(\n          customer_id,\n          name,\n          phone,\n          medicine_details\n        );\n        console.log(customerRequestData);\n        this.fetchCustomerRequestData();\n      }\n\n  \n\n  render() {\n    return (\n      <section className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"block-header\">\n            <h2>MANAGE CUSTOMER MEDICINE REQUEST</h2>\n          </div>\n          <div className=\"row clearfix\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div className=\"card\">\n                <div className=\"header\">\n                  <h2>Add CUSTOMER REQUEST</h2>\n                </div>\n                <div className=\"body\">\n                  <form onSubmit={this.formSubmit} ref={this.formRef}>\n                    <label htmlFor=\"email_address\">Name</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"name\"\n                          name=\"name\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Customer Name\"\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Phone.</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"phone\"\n                          name=\"phone\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Phone No.\"\n                        />\n                      </div>\n                    </div>\n                    <label htmlFor=\"email_address\">Medicine Details</label>\n                    <div className=\"form-group\">\n                      <div className=\"form-line\">\n                        <input\n                          type=\"text\"\n                          id=\"medicine_details\"\n                          name=\"medicine_details\"\n                          className=\"form-control\"\n                          placeholder=\"Enter Medicine Details\"\n                        />\n                      </div>\n                    </div>\n                    <br />\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary m-t-15 waves-effect btn-block\"\n                      disabled={this.state.btnMessage == 0 ? false : true}\n                    >\n                      {this.state.btnMessage == 0\n                        ? \"Add Customer Request\"\n                        : \"Adding Customer Request Please Wait..\"}\n                    </button>\n                    <br />\n                    {this.state.errorRes == false &&\n                    this.state.sendData == true ? (\n                      <div className=\"alert alert-success\">\n                        <strong>Success!</strong> {this.state.errorMessage}.\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                    {this.state.errorRes == true &&\n                    this.state.sendData == true ? (\n                      <div className=\"alert alert-danger\">\n                        <strong>Failed!</strong>\n                        {this.state.errorMessage}.\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row clearfix\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div className=\"card\">\n                <div className=\"header\">\n                  {this.state.dataLoaded == false ? (\n                    <div className=\"text-center\">\n                      <div className=\"preloader pl-size-xl\">\n                        <div className=\"spinner-layer\">\n                          <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                          </div>\n                          <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  <h2>All Customer Medicine Request</h2>\n                </div>\n                <div className=\"body table-responsive\">\n                  <table className=\"table table-hover\">\n                    <thead>\n                      <tr>\n                        <th>#ID</th>\n                        <th>NAME</th>\n                        <th>Phone</th>\n                        <th>Medicine Details</th>\n                        <th>Status</th>\n                        <th>Added On</th>\n                        <th>Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.customerRequestDataList.map(\n                        (CustomerRequest) => (\n                          <tr key={CustomerRequest.id}>\n                            <td>{CustomerRequest.id}</td>\n                            <td>{CustomerRequest.customer_name}</td>\n                            <td>{CustomerRequest.phone}</td>\n                            <td>{CustomerRequest.medicine_details}</td>\n                            <td>\n                              {CustomerRequest.status == 0\n                                ? \"Pending\"\n                                : \"Completed\"}\n                            </td>\n                            <td>\n                              {new Date(\n                                CustomerRequest.added_on\n                              ).toLocaleString()}\n                            </td>\n                            <td>\n                              {CustomerRequest.status == 0 ? (\n                                <button\n                                  className=\"btn btn-block btn-warning\"\n                                  onClick={() =>\n                                    this.completeCustomerRequestDetails(\n                                      CustomerRequest.id,\n                                      CustomerRequest.customer_name,\n                                      CustomerRequest.phone,\n                                      CustomerRequest.medicine_details\n                                    )\n                                  }\n                                >\n                                  COMPLETE?\n                                </button>\n                              ) : (\n                                <button className=\"btn btn-block btn-success\">\n                                  COMPLETED\n                                </button>\n                              )}\n                            </td>\n                          </tr>\n                        )\n                      )}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default CustomerRequestComponent;",{"ruleId":"266","severity":1,"message":"267","line":5,"column":10,"nodeType":"268","messageId":"269","endLine":5,"endColumn":22},{"ruleId":"266","severity":1,"message":"270","line":23,"column":5,"nodeType":"268","messageId":"269","endLine":23,"endColumn":11},{"ruleId":"266","severity":1,"message":"271","line":25,"column":5,"nodeType":"268","messageId":"269","endLine":25,"endColumn":9},{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","severity":1,"message":"277","line":25,"column":33,"nodeType":"278","messageId":"279","endLine":25,"endColumn":35},{"ruleId":"276","severity":1,"message":"277","line":25,"column":62,"nodeType":"278","messageId":"279","endLine":25,"endColumn":64},{"ruleId":"280","severity":1,"message":"281","line":109,"column":13,"nodeType":"282","endLine":109,"endColumn":43},{"ruleId":"283","severity":1,"message":"284","line":109,"column":21,"nodeType":"285","messageId":"286","endLine":109,"endColumn":42},{"ruleId":"276","severity":1,"message":"287","line":40,"column":37,"nodeType":"278","messageId":"279","endLine":40,"endColumn":39},{"ruleId":"276","severity":1,"message":"287","line":108,"column":38,"nodeType":"278","messageId":"279","endLine":108,"endColumn":40},{"ruleId":"280","severity":1,"message":"281","line":157,"column":19,"nodeType":"282","endLine":157,"endColumn":31},{"ruleId":"288","severity":1,"message":"289","line":9,"column":13,"nodeType":"282","endLine":9,"endColumn":74},{"ruleId":"280","severity":1,"message":"281","line":9,"column":13,"nodeType":"282","endLine":9,"endColumn":74},{"ruleId":"266","severity":1,"message":"290","line":1,"column":17,"nodeType":"268","messageId":"269","endLine":1,"endColumn":26},{"ruleId":"266","severity":1,"message":"291","line":5,"column":8,"nodeType":"268","messageId":"269","endLine":5,"endColumn":21},{"ruleId":"276","severity":1,"message":"287","line":22,"column":34,"nodeType":"278","messageId":"279","endLine":22,"endColumn":36},{"ruleId":"276","severity":1,"message":"287","line":25,"column":41,"nodeType":"278","messageId":"279","endLine":25,"endColumn":43},{"ruleId":"266","severity":1,"message":"292","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":19},{"ruleId":"276","severity":1,"message":"287","line":154,"column":55,"nodeType":"278","messageId":"279","endLine":154,"endColumn":57},{"ruleId":"276","severity":1,"message":"287","line":156,"column":46,"nodeType":"278","messageId":"279","endLine":156,"endColumn":48},{"ruleId":"276","severity":1,"message":"287","line":161,"column":42,"nodeType":"278","messageId":"279","endLine":161,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":162,"column":41,"nodeType":"278","messageId":"279","endLine":162,"endColumn":43},{"ruleId":"276","severity":1,"message":"287","line":169,"column":42,"nodeType":"278","messageId":"279","endLine":169,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":170,"column":41,"nodeType":"278","messageId":"279","endLine":170,"endColumn":43},{"ruleId":"276","severity":1,"message":"287","line":187,"column":42,"nodeType":"278","messageId":"279","endLine":187,"endColumn":44},{"ruleId":"266","severity":1,"message":"290","line":1,"column":17,"nodeType":"268","messageId":"269","endLine":1,"endColumn":26},{"ruleId":"276","severity":1,"message":"277","line":75,"column":14,"nodeType":"278","messageId":"279","endLine":75,"endColumn":16},{"ruleId":"293","severity":1,"message":"294","line":271,"column":3,"nodeType":"295","messageId":"279","endLine":279,"endColumn":4},{"ruleId":"266","severity":1,"message":"292","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":19},{"ruleId":"276","severity":1,"message":"287","line":100,"column":40,"nodeType":"278","messageId":"279","endLine":100,"endColumn":42},{"ruleId":"276","severity":1,"message":"287","line":202,"column":55,"nodeType":"278","messageId":"279","endLine":202,"endColumn":57},{"ruleId":"276","severity":1,"message":"287","line":204,"column":46,"nodeType":"278","messageId":"279","endLine":204,"endColumn":48},{"ruleId":"276","severity":1,"message":"287","line":209,"column":42,"nodeType":"278","messageId":"279","endLine":209,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":210,"column":41,"nodeType":"278","messageId":"279","endLine":210,"endColumn":43},{"ruleId":"276","severity":1,"message":"287","line":217,"column":42,"nodeType":"278","messageId":"279","endLine":217,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":218,"column":41,"nodeType":"278","messageId":"279","endLine":218,"endColumn":43},{"ruleId":"276","severity":1,"message":"287","line":235,"column":42,"nodeType":"278","messageId":"279","endLine":235,"endColumn":44},{"ruleId":"266","severity":1,"message":"292","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":19},{"ruleId":"276","severity":1,"message":"287","line":79,"column":55,"nodeType":"278","messageId":"279","endLine":79,"endColumn":57},{"ruleId":"276","severity":1,"message":"287","line":81,"column":46,"nodeType":"278","messageId":"279","endLine":81,"endColumn":48},{"ruleId":"276","severity":1,"message":"287","line":86,"column":42,"nodeType":"278","messageId":"279","endLine":86,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":87,"column":41,"nodeType":"278","messageId":"279","endLine":87,"endColumn":43},{"ruleId":"276","severity":1,"message":"287","line":100,"column":42,"nodeType":"278","messageId":"279","endLine":100,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":101,"column":41,"nodeType":"278","messageId":"279","endLine":101,"endColumn":43},{"ruleId":"266","severity":1,"message":"292","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":19},{"ruleId":"276","severity":1,"message":"287","line":99,"column":55,"nodeType":"278","messageId":"279","endLine":99,"endColumn":57},{"ruleId":"276","severity":1,"message":"287","line":101,"column":46,"nodeType":"278","messageId":"279","endLine":101,"endColumn":48},{"ruleId":"276","severity":1,"message":"287","line":106,"column":42,"nodeType":"278","messageId":"279","endLine":106,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":107,"column":41,"nodeType":"278","messageId":"279","endLine":107,"endColumn":43},{"ruleId":"276","severity":1,"message":"287","line":123,"column":42,"nodeType":"278","messageId":"279","endLine":123,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":124,"column":41,"nodeType":"278","messageId":"279","endLine":124,"endColumn":43},{"ruleId":"266","severity":1,"message":"292","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":19},{"ruleId":"266","severity":1,"message":"271","line":4,"column":10,"nodeType":"268","messageId":"269","endLine":4,"endColumn":14},{"ruleId":"276","severity":1,"message":"277","line":75,"column":43,"nodeType":"278","messageId":"279","endLine":75,"endColumn":45},{"ruleId":"296","severity":1,"message":"297","line":85,"column":5,"nodeType":"298","endLine":85,"endColumn":38},{"ruleId":"276","severity":1,"message":"287","line":358,"column":55,"nodeType":"278","messageId":"279","endLine":358,"endColumn":57},{"ruleId":"276","severity":1,"message":"287","line":360,"column":46,"nodeType":"278","messageId":"279","endLine":360,"endColumn":48},{"ruleId":"276","severity":1,"message":"287","line":365,"column":42,"nodeType":"278","messageId":"279","endLine":365,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":366,"column":41,"nodeType":"278","messageId":"279","endLine":366,"endColumn":43},{"ruleId":"276","severity":1,"message":"287","line":373,"column":42,"nodeType":"278","messageId":"279","endLine":373,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":374,"column":41,"nodeType":"278","messageId":"279","endLine":374,"endColumn":43},{"ruleId":"266","severity":1,"message":"292","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":19},{"ruleId":"266","severity":1,"message":"271","line":4,"column":10,"nodeType":"268","messageId":"269","endLine":4,"endColumn":14},{"ruleId":"276","severity":1,"message":"277","line":81,"column":47,"nodeType":"278","messageId":"279","endLine":81,"endColumn":49},{"ruleId":"296","severity":1,"message":"297","line":91,"column":9,"nodeType":"298","endLine":91,"endColumn":42},{"ruleId":"276","severity":1,"message":"287","line":166,"column":42,"nodeType":"278","messageId":"279","endLine":166,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":425,"column":39,"nodeType":"278","messageId":"279","endLine":425,"endColumn":41},{"ruleId":"276","severity":1,"message":"287","line":520,"column":55,"nodeType":"278","messageId":"279","endLine":520,"endColumn":57},{"ruleId":"276","severity":1,"message":"287","line":522,"column":46,"nodeType":"278","messageId":"279","endLine":522,"endColumn":48},{"ruleId":"276","severity":1,"message":"287","line":527,"column":42,"nodeType":"278","messageId":"279","endLine":527,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":528,"column":41,"nodeType":"278","messageId":"279","endLine":528,"endColumn":43},{"ruleId":"276","severity":1,"message":"287","line":535,"column":42,"nodeType":"278","messageId":"279","endLine":535,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":536,"column":41,"nodeType":"278","messageId":"279","endLine":536,"endColumn":43},{"ruleId":"266","severity":1,"message":"292","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":19},{"ruleId":"276","severity":1,"message":"287","line":159,"column":55,"nodeType":"278","messageId":"279","endLine":159,"endColumn":57},{"ruleId":"276","severity":1,"message":"287","line":161,"column":46,"nodeType":"278","messageId":"279","endLine":161,"endColumn":48},{"ruleId":"276","severity":1,"message":"287","line":166,"column":42,"nodeType":"278","messageId":"279","endLine":166,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":167,"column":41,"nodeType":"278","messageId":"279","endLine":167,"endColumn":43},{"ruleId":"276","severity":1,"message":"287","line":174,"column":42,"nodeType":"278","messageId":"279","endLine":174,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":175,"column":41,"nodeType":"278","messageId":"279","endLine":175,"endColumn":43},{"ruleId":"276","severity":1,"message":"287","line":192,"column":42,"nodeType":"278","messageId":"279","endLine":192,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":231,"column":62,"nodeType":"278","messageId":"279","endLine":231,"endColumn":64},{"ruleId":"266","severity":1,"message":"292","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":19},{"ruleId":"276","severity":1,"message":"287","line":137,"column":55,"nodeType":"278","messageId":"279","endLine":137,"endColumn":57},{"ruleId":"276","severity":1,"message":"287","line":139,"column":46,"nodeType":"278","messageId":"279","endLine":139,"endColumn":48},{"ruleId":"276","severity":1,"message":"287","line":144,"column":42,"nodeType":"278","messageId":"279","endLine":144,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":145,"column":41,"nodeType":"278","messageId":"279","endLine":145,"endColumn":43},{"ruleId":"276","severity":1,"message":"287","line":152,"column":42,"nodeType":"278","messageId":"279","endLine":152,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":153,"column":41,"nodeType":"278","messageId":"279","endLine":153,"endColumn":43},{"ruleId":"276","severity":1,"message":"287","line":170,"column":42,"nodeType":"278","messageId":"279","endLine":170,"endColumn":44},{"ruleId":"266","severity":1,"message":"292","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":19},{"ruleId":"276","severity":1,"message":"287","line":210,"column":55,"nodeType":"278","messageId":"279","endLine":210,"endColumn":57},{"ruleId":"276","severity":1,"message":"287","line":212,"column":46,"nodeType":"278","messageId":"279","endLine":212,"endColumn":48},{"ruleId":"276","severity":1,"message":"287","line":217,"column":42,"nodeType":"278","messageId":"279","endLine":217,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":218,"column":41,"nodeType":"278","messageId":"279","endLine":218,"endColumn":43},{"ruleId":"276","severity":1,"message":"287","line":225,"column":42,"nodeType":"278","messageId":"279","endLine":225,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":226,"column":41,"nodeType":"278","messageId":"279","endLine":226,"endColumn":43},{"ruleId":"276","severity":1,"message":"287","line":280,"column":61,"nodeType":"278","messageId":"279","endLine":280,"endColumn":63},{"ruleId":"276","severity":1,"message":"287","line":282,"column":52,"nodeType":"278","messageId":"279","endLine":282,"endColumn":54},{"ruleId":"276","severity":1,"message":"287","line":287,"column":48,"nodeType":"278","messageId":"279","endLine":287,"endColumn":50},{"ruleId":"276","severity":1,"message":"287","line":288,"column":47,"nodeType":"278","messageId":"279","endLine":288,"endColumn":49},{"ruleId":"276","severity":1,"message":"287","line":296,"column":48,"nodeType":"278","messageId":"279","endLine":296,"endColumn":50},{"ruleId":"276","severity":1,"message":"287","line":297,"column":47,"nodeType":"278","messageId":"279","endLine":297,"endColumn":49},{"ruleId":"276","severity":1,"message":"287","line":314,"column":42,"nodeType":"278","messageId":"279","endLine":314,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":399,"column":59,"nodeType":"278","messageId":"279","endLine":399,"endColumn":61},{"ruleId":"276","severity":1,"message":"287","line":401,"column":50,"nodeType":"278","messageId":"279","endLine":401,"endColumn":52},{"ruleId":"276","severity":1,"message":"287","line":406,"column":46,"nodeType":"278","messageId":"279","endLine":406,"endColumn":48},{"ruleId":"276","severity":1,"message":"287","line":407,"column":45,"nodeType":"278","messageId":"279","endLine":407,"endColumn":47},{"ruleId":"276","severity":1,"message":"287","line":414,"column":46,"nodeType":"278","messageId":"279","endLine":414,"endColumn":48},{"ruleId":"276","severity":1,"message":"287","line":415,"column":45,"nodeType":"278","messageId":"279","endLine":415,"endColumn":47},{"ruleId":"276","severity":1,"message":"287","line":432,"column":42,"nodeType":"278","messageId":"279","endLine":432,"endColumn":44},{"ruleId":"266","severity":1,"message":"292","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":19},{"ruleId":"266","severity":1,"message":"271","line":4,"column":10,"nodeType":"268","messageId":"269","endLine":4,"endColumn":14},{"ruleId":"296","severity":1,"message":"297","line":161,"column":5,"nodeType":"298","endLine":161,"endColumn":15},{"ruleId":"296","severity":1,"message":"297","line":177,"column":5,"nodeType":"298","endLine":177,"endColumn":15},{"ruleId":"296","severity":1,"message":"297","line":187,"column":5,"nodeType":"298","endLine":187,"endColumn":38},{"ruleId":"296","severity":1,"message":"297","line":188,"column":5,"nodeType":"298","endLine":188,"endColumn":38},{"ruleId":"296","severity":1,"message":"297","line":189,"column":5,"nodeType":"298","endLine":189,"endColumn":38},{"ruleId":"296","severity":1,"message":"297","line":190,"column":5,"nodeType":"298","endLine":190,"endColumn":38},{"ruleId":"296","severity":1,"message":"297","line":191,"column":5,"nodeType":"298","endLine":191,"endColumn":38},{"ruleId":"296","severity":1,"message":"297","line":192,"column":5,"nodeType":"298","endLine":192,"endColumn":38},{"ruleId":"296","severity":1,"message":"297","line":193,"column":5,"nodeType":"298","endLine":193,"endColumn":38},{"ruleId":"296","severity":1,"message":"297","line":194,"column":5,"nodeType":"298","endLine":194,"endColumn":38},{"ruleId":"296","severity":1,"message":"297","line":203,"column":5,"nodeType":"298","endLine":203,"endColumn":38},{"ruleId":"296","severity":1,"message":"297","line":208,"column":5,"nodeType":"298","endLine":208,"endColumn":38},{"ruleId":"276","severity":1,"message":"287","line":393,"column":55,"nodeType":"278","messageId":"279","endLine":393,"endColumn":57},{"ruleId":"276","severity":1,"message":"287","line":395,"column":46,"nodeType":"278","messageId":"279","endLine":395,"endColumn":48},{"ruleId":"276","severity":1,"message":"287","line":400,"column":42,"nodeType":"278","messageId":"279","endLine":400,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":401,"column":41,"nodeType":"278","messageId":"279","endLine":401,"endColumn":43},{"ruleId":"276","severity":1,"message":"287","line":408,"column":42,"nodeType":"278","messageId":"279","endLine":408,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":409,"column":41,"nodeType":"278","messageId":"279","endLine":409,"endColumn":43},{"ruleId":"276","severity":1,"message":"287","line":51,"column":29,"nodeType":"278","messageId":"279","endLine":51,"endColumn":31},{"ruleId":"266","severity":1,"message":"292","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":19},{"ruleId":"276","severity":1,"message":"287","line":130,"column":55,"nodeType":"278","messageId":"279","endLine":130,"endColumn":57},{"ruleId":"276","severity":1,"message":"287","line":132,"column":46,"nodeType":"278","messageId":"279","endLine":132,"endColumn":48},{"ruleId":"276","severity":1,"message":"287","line":137,"column":42,"nodeType":"278","messageId":"279","endLine":137,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":138,"column":41,"nodeType":"278","messageId":"279","endLine":138,"endColumn":43},{"ruleId":"276","severity":1,"message":"287","line":145,"column":42,"nodeType":"278","messageId":"279","endLine":145,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":146,"column":41,"nodeType":"278","messageId":"279","endLine":146,"endColumn":43},{"ruleId":"276","severity":1,"message":"287","line":163,"column":42,"nodeType":"278","messageId":"279","endLine":163,"endColumn":44},{"ruleId":"276","severity":1,"message":"287","line":203,"column":55,"nodeType":"278","messageId":"279","endLine":203,"endColumn":57},{"ruleId":"276","severity":1,"message":"287","line":213,"column":55,"nodeType":"278","messageId":"279","endLine":213,"endColumn":57},"no-unused-vars","'PrivateRoute' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["299"],"no-negated-in-lhs",["300"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","Expected '===' and instead saw '=='.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'Component' is defined but never used.","'HomeComponent' is defined but never used.","'AuthHandler' is defined but never used.","no-dupe-class-members","Duplicate name 'fetchCompanyOnly'.","MethodDefinition","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]